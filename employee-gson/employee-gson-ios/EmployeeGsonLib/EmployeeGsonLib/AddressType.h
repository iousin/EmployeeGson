//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/employee/model/AddressType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AddressType")
#ifdef RESTRICT_AddressType
#define INCLUDE_ALL_AddressType 0
#else
#define INCLUDE_ALL_AddressType 1
#endif
#undef RESTRICT_AddressType

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (EmpAddressType_) && (INCLUDE_ALL_AddressType || defined(INCLUDE_EmpAddressType))
#define EmpAddressType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EmpAddressType_Enum) {
  EmpAddressType_Enum_PERSONAL = 0,
  EmpAddressType_Enum_BUSINESS = 1,
};

@interface EmpAddressType : JavaLangEnum

+ (EmpAddressType * __nonnull)PERSONAL;

+ (EmpAddressType * __nonnull)BUSINESS;

#pragma mark Public

+ (EmpAddressType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (EmpAddressType_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(EmpAddressType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EmpAddressType *EmpAddressType_values_[];

inline EmpAddressType *EmpAddressType_get_PERSONAL(void);
J2OBJC_ENUM_CONSTANT(EmpAddressType, PERSONAL)

inline EmpAddressType *EmpAddressType_get_BUSINESS(void);
J2OBJC_ENUM_CONSTANT(EmpAddressType, BUSINESS)

FOUNDATION_EXPORT IOSObjectArray *EmpAddressType_values(void);

FOUNDATION_EXPORT EmpAddressType *EmpAddressType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EmpAddressType *EmpAddressType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EmpAddressType)

@compatibility_alias ComEmployeeModelAddressType EmpAddressType;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AddressType")
