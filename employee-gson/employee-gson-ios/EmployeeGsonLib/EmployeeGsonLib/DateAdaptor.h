//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/employee/gson/DateAdaptor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DateAdaptor")
#ifdef RESTRICT_DateAdaptor
#define INCLUDE_ALL_DateAdaptor 0
#else
#define INCLUDE_ALL_DateAdaptor 1
#endif
#undef RESTRICT_DateAdaptor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (EmpDateAdaptor_) && (INCLUDE_ALL_DateAdaptor || defined(INCLUDE_EmpDateAdaptor))
#define EmpDateAdaptor_

#define RESTRICT_JsonDeserializer 1
#define INCLUDE_GsonJsonDeserializer 1
#include "JsonDeserializer.h"

#define RESTRICT_JsonSerializer 1
#define INCLUDE_GsonJsonSerializer 1
#include "JsonSerializer.h"

@class GsonJsonElement;
@class JavaUtilDate;
@protocol GsonJsonDeserializationContext;
@protocol GsonJsonSerializationContext;
@protocol JavaLangReflectType;

@interface EmpDateAdaptor : NSObject < GsonJsonDeserializer, GsonJsonSerializer >

#pragma mark Public

- (instancetype __nonnull)init;

- (JavaUtilDate *)deserializeWithGsonJsonElement:(GsonJsonElement *)json
                         withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
              withGsonJsonDeserializationContext:(id<GsonJsonDeserializationContext>)context;

- (GsonJsonElement *)serializeWithId:(JavaUtilDate *)src
             withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withGsonJsonSerializationContext:(id<GsonJsonSerializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(EmpDateAdaptor)

FOUNDATION_EXPORT void EmpDateAdaptor_init(EmpDateAdaptor *self);

FOUNDATION_EXPORT EmpDateAdaptor *new_EmpDateAdaptor_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EmpDateAdaptor *create_EmpDateAdaptor_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EmpDateAdaptor)

@compatibility_alias ComEmployeeGsonDateAdaptor EmpDateAdaptor;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_DateAdaptor")
