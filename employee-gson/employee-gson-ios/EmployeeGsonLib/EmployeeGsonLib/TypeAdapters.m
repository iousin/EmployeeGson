//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/google/gson/internal/bind/TypeAdapters.java
//

#include "Gson.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "JsonArray.h"
#include "JsonElement.h"
#include "JsonIOException.h"
#include "JsonNull.h"
#include "JsonObject.h"
#include "JsonPrimitive.h"
#include "JsonReader.h"
#include "JsonSyntaxException.h"
#include "JsonToken.h"
#include "JsonWriter.h"
#include "LazilyParsedNumber.h"
#include "SerializedName.h"
#include "TypeAdapter.h"
#include "TypeAdapterFactory.h"
#include "TypeAdapters.h"
#include "TypeToken.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Field.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/net/InetAddress.h"
#include "java/net/URI.h"
#include "java/net/URISyntaxException.h"
#include "java/net/URL.h"
#include "java/sql/Timestamp.h"
#include "java/util/ArrayList.h"
#include "java/util/BitSet.h"
#include "java/util/Calendar.h"
#include "java/util/Currency.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/StringTokenizer.h"
#include "java/util/UUID.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicIntegerArray.h"

@class JavaIoReader;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface GsonTypeAdapters ()

- (instancetype)init;

@end

__attribute__((unused)) static void GsonTypeAdapters_init(GsonTypeAdapters *self);

__attribute__((unused)) static GsonTypeAdapters *new_GsonTypeAdapters_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters *create_GsonTypeAdapters_init(void);

@interface GsonTypeAdapters_1 : GsonTypeAdapter

- (instancetype)init;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(IOSClass *)value;

- (IOSClass *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (IOSClass *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (IOSClass *)fromJsonWithNSString:(NSString *)arg0;

- (IOSClass *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_1)

__attribute__((unused)) static void GsonTypeAdapters_1_init(GsonTypeAdapters_1 *self);

__attribute__((unused)) static GsonTypeAdapters_1 *new_GsonTypeAdapters_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_1 *create_GsonTypeAdapters_1_init(void);

@interface GsonTypeAdapters_2 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilBitSet *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilBitSet *)src;

- (JavaUtilBitSet *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilBitSet *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilBitSet *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_2)

__attribute__((unused)) static void GsonTypeAdapters_2_init(GsonTypeAdapters_2 *self);

__attribute__((unused)) static GsonTypeAdapters_2 *new_GsonTypeAdapters_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_2 *create_GsonTypeAdapters_2_init(void);

@interface GsonTypeAdapters_3 : GsonTypeAdapter

- (instancetype)init;

- (JavaLangBoolean *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value;

- (JavaLangBoolean *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangBoolean *)fromJsonWithNSString:(NSString *)arg0;

- (JavaLangBoolean *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_3)

__attribute__((unused)) static void GsonTypeAdapters_3_init(GsonTypeAdapters_3 *self);

__attribute__((unused)) static GsonTypeAdapters_3 *new_GsonTypeAdapters_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_3 *create_GsonTypeAdapters_3_init(void);

@interface GsonTypeAdapters_4 : GsonTypeAdapter

- (instancetype)init;

- (JavaLangBoolean *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value;

- (JavaLangBoolean *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangBoolean *)fromJsonWithNSString:(NSString *)arg0;

- (JavaLangBoolean *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_4)

__attribute__((unused)) static void GsonTypeAdapters_4_init(GsonTypeAdapters_4 *self);

__attribute__((unused)) static GsonTypeAdapters_4 *new_GsonTypeAdapters_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_4 *create_GsonTypeAdapters_4_init(void);

@interface GsonTypeAdapters_5 : GsonTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

- (NSNumber *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_5)

__attribute__((unused)) static void GsonTypeAdapters_5_init(GsonTypeAdapters_5 *self);

__attribute__((unused)) static GsonTypeAdapters_5 *new_GsonTypeAdapters_5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_5 *create_GsonTypeAdapters_5_init(void);

@interface GsonTypeAdapters_6 : GsonTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

- (NSNumber *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_6)

__attribute__((unused)) static void GsonTypeAdapters_6_init(GsonTypeAdapters_6 *self);

__attribute__((unused)) static GsonTypeAdapters_6 *new_GsonTypeAdapters_6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_6 *create_GsonTypeAdapters_6_init(void);

@interface GsonTypeAdapters_7 : GsonTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

- (NSNumber *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_7)

__attribute__((unused)) static void GsonTypeAdapters_7_init(GsonTypeAdapters_7 *self);

__attribute__((unused)) static GsonTypeAdapters_7 *new_GsonTypeAdapters_7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_7 *create_GsonTypeAdapters_7_init(void);

@interface GsonTypeAdapters_8 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilConcurrentAtomicAtomicInteger *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicInteger *)value;

- (JavaUtilConcurrentAtomicAtomicInteger *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilConcurrentAtomicAtomicInteger *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilConcurrentAtomicAtomicInteger *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_8)

__attribute__((unused)) static void GsonTypeAdapters_8_init(GsonTypeAdapters_8 *self);

__attribute__((unused)) static GsonTypeAdapters_8 *new_GsonTypeAdapters_8_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_8 *create_GsonTypeAdapters_8_init(void);

@interface GsonTypeAdapters_9 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilConcurrentAtomicAtomicBoolean *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicBoolean *)value;

- (JavaUtilConcurrentAtomicAtomicBoolean *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilConcurrentAtomicAtomicBoolean *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilConcurrentAtomicAtomicBoolean *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_9)

__attribute__((unused)) static void GsonTypeAdapters_9_init(GsonTypeAdapters_9 *self);

__attribute__((unused)) static GsonTypeAdapters_9 *new_GsonTypeAdapters_9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_9 *create_GsonTypeAdapters_9_init(void);

@interface GsonTypeAdapters_10 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicIntegerArray *)value;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_10)

__attribute__((unused)) static void GsonTypeAdapters_10_init(GsonTypeAdapters_10 *self);

__attribute__((unused)) static GsonTypeAdapters_10 *new_GsonTypeAdapters_10_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_10 *create_GsonTypeAdapters_10_init(void);

@interface GsonTypeAdapters_11 : GsonTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

- (NSNumber *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_11)

__attribute__((unused)) static void GsonTypeAdapters_11_init(GsonTypeAdapters_11 *self);

__attribute__((unused)) static GsonTypeAdapters_11 *new_GsonTypeAdapters_11_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_11 *create_GsonTypeAdapters_11_init(void);

@interface GsonTypeAdapters_12 : GsonTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

- (NSNumber *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_12)

__attribute__((unused)) static void GsonTypeAdapters_12_init(GsonTypeAdapters_12 *self);

__attribute__((unused)) static GsonTypeAdapters_12 *new_GsonTypeAdapters_12_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_12 *create_GsonTypeAdapters_12_init(void);

@interface GsonTypeAdapters_13 : GsonTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

- (NSNumber *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_13)

__attribute__((unused)) static void GsonTypeAdapters_13_init(GsonTypeAdapters_13 *self);

__attribute__((unused)) static GsonTypeAdapters_13 *new_GsonTypeAdapters_13_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_13 *create_GsonTypeAdapters_13_init(void);

@interface GsonTypeAdapters_14 : GsonTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

- (NSNumber *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_14)

__attribute__((unused)) static void GsonTypeAdapters_14_init(GsonTypeAdapters_14 *self);

__attribute__((unused)) static GsonTypeAdapters_14 *new_GsonTypeAdapters_14_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_14 *create_GsonTypeAdapters_14_init(void);

@interface GsonTypeAdapters_15 : GsonTypeAdapter

- (instancetype)init;

- (JavaLangCharacter *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangCharacter *)value;

- (JavaLangCharacter *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangCharacter *)fromJsonWithNSString:(NSString *)arg0;

- (JavaLangCharacter *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_15)

__attribute__((unused)) static void GsonTypeAdapters_15_init(GsonTypeAdapters_15 *self);

__attribute__((unused)) static GsonTypeAdapters_15 *new_GsonTypeAdapters_15_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_15 *create_GsonTypeAdapters_15_init(void);

@interface GsonTypeAdapters_16 : GsonTypeAdapter

- (instancetype)init;

- (NSString *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSString *)value;

- (NSString *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSString *)fromJsonWithNSString:(NSString *)arg0;

- (NSString *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_16)

__attribute__((unused)) static void GsonTypeAdapters_16_init(GsonTypeAdapters_16 *self);

__attribute__((unused)) static GsonTypeAdapters_16 *new_GsonTypeAdapters_16_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_16 *create_GsonTypeAdapters_16_init(void);

@interface GsonTypeAdapters_17 : GsonTypeAdapter

- (instancetype)init;

- (JavaMathBigDecimal *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaMathBigDecimal *)value;

- (JavaMathBigDecimal *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaMathBigDecimal *)fromJsonWithNSString:(NSString *)arg0;

- (JavaMathBigDecimal *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_17)

__attribute__((unused)) static void GsonTypeAdapters_17_init(GsonTypeAdapters_17 *self);

__attribute__((unused)) static GsonTypeAdapters_17 *new_GsonTypeAdapters_17_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_17 *create_GsonTypeAdapters_17_init(void);

@interface GsonTypeAdapters_18 : GsonTypeAdapter

- (instancetype)init;

- (JavaMathBigInteger *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaMathBigInteger *)value;

- (JavaMathBigInteger *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaMathBigInteger *)fromJsonWithNSString:(NSString *)arg0;

- (JavaMathBigInteger *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_18)

__attribute__((unused)) static void GsonTypeAdapters_18_init(GsonTypeAdapters_18 *self);

__attribute__((unused)) static GsonTypeAdapters_18 *new_GsonTypeAdapters_18_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_18 *create_GsonTypeAdapters_18_init(void);

@interface GsonTypeAdapters_19 : GsonTypeAdapter

- (instancetype)init;

- (JavaLangStringBuilder *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangStringBuilder *)value;

- (JavaLangStringBuilder *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangStringBuilder *)fromJsonWithNSString:(NSString *)arg0;

- (JavaLangStringBuilder *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_19)

__attribute__((unused)) static void GsonTypeAdapters_19_init(GsonTypeAdapters_19 *self);

__attribute__((unused)) static GsonTypeAdapters_19 *new_GsonTypeAdapters_19_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_19 *create_GsonTypeAdapters_19_init(void);

@interface GsonTypeAdapters_20 : GsonTypeAdapter

- (instancetype)init;

- (JavaLangStringBuffer *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangStringBuffer *)value;

- (JavaLangStringBuffer *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangStringBuffer *)fromJsonWithNSString:(NSString *)arg0;

- (JavaLangStringBuffer *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_20)

__attribute__((unused)) static void GsonTypeAdapters_20_init(GsonTypeAdapters_20 *self);

__attribute__((unused)) static GsonTypeAdapters_20 *new_GsonTypeAdapters_20_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_20 *create_GsonTypeAdapters_20_init(void);

@interface GsonTypeAdapters_21 : GsonTypeAdapter

- (instancetype)init;

- (JavaNetURL *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaNetURL *)value;

- (JavaNetURL *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaNetURL *)fromJsonWithNSString:(NSString *)arg0;

- (JavaNetURL *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_21)

__attribute__((unused)) static void GsonTypeAdapters_21_init(GsonTypeAdapters_21 *self);

__attribute__((unused)) static GsonTypeAdapters_21 *new_GsonTypeAdapters_21_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_21 *create_GsonTypeAdapters_21_init(void);

@interface GsonTypeAdapters_22 : GsonTypeAdapter

- (instancetype)init;

- (JavaNetURI *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaNetURI *)value;

- (JavaNetURI *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaNetURI *)fromJsonWithNSString:(NSString *)arg0;

- (JavaNetURI *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_22)

__attribute__((unused)) static void GsonTypeAdapters_22_init(GsonTypeAdapters_22 *self);

__attribute__((unused)) static GsonTypeAdapters_22 *new_GsonTypeAdapters_22_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_22 *create_GsonTypeAdapters_22_init(void);

@interface GsonTypeAdapters_23 : GsonTypeAdapter

- (instancetype)init;

- (JavaNetInetAddress *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaNetInetAddress *)value;

- (JavaNetInetAddress *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaNetInetAddress *)fromJsonWithNSString:(NSString *)arg0;

- (JavaNetInetAddress *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_23)

__attribute__((unused)) static void GsonTypeAdapters_23_init(GsonTypeAdapters_23 *self);

__attribute__((unused)) static GsonTypeAdapters_23 *new_GsonTypeAdapters_23_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_23 *create_GsonTypeAdapters_23_init(void);

@interface GsonTypeAdapters_24 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilUUID *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilUUID *)value;

- (JavaUtilUUID *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilUUID *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilUUID *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_24)

__attribute__((unused)) static void GsonTypeAdapters_24_init(GsonTypeAdapters_24 *self);

__attribute__((unused)) static GsonTypeAdapters_24 *new_GsonTypeAdapters_24_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_24 *create_GsonTypeAdapters_24_init(void);

@interface GsonTypeAdapters_25 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilCurrency *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilCurrency *)value;

- (JavaUtilCurrency *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilCurrency *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilCurrency *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_25)

__attribute__((unused)) static void GsonTypeAdapters_25_init(GsonTypeAdapters_25 *self);

__attribute__((unused)) static GsonTypeAdapters_25 *new_GsonTypeAdapters_25_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_25 *create_GsonTypeAdapters_25_init(void);

@interface GsonTypeAdapters_26 : NSObject < GsonTypeAdapterFactory >

- (instancetype)init;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_26)

__attribute__((unused)) static void GsonTypeAdapters_26_init(GsonTypeAdapters_26 *self);

__attribute__((unused)) static GsonTypeAdapters_26 *new_GsonTypeAdapters_26_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_26 *create_GsonTypeAdapters_26_init(void);

@interface GsonTypeAdapters_26_1 : GsonTypeAdapter {
 @public
  GsonTypeAdapter *val$dateTypeAdapter_;
}

- (instancetype)initWithGsonTypeAdapter:(GsonTypeAdapter *)capture$0;

- (JavaSqlTimestamp *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaSqlTimestamp *)value;

- (JavaSqlTimestamp *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaSqlTimestamp *)fromJsonWithNSString:(NSString *)arg0;

- (JavaSqlTimestamp *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_26_1)

__attribute__((unused)) static void GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(GsonTypeAdapters_26_1 *self, GsonTypeAdapter *capture$0);

__attribute__((unused)) static GsonTypeAdapters_26_1 *new_GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(GsonTypeAdapter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_26_1 *create_GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(GsonTypeAdapter *capture$0);

@interface GsonTypeAdapters_27 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilCalendar *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilCalendar *)value;

- (JavaUtilCalendar *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilCalendar *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilCalendar *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_27)

inline NSString *GsonTypeAdapters_27_get_YEAR(void);
static NSString *GsonTypeAdapters_27_YEAR = @"year";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonTypeAdapters_27, YEAR, NSString *)

inline NSString *GsonTypeAdapters_27_get_MONTH(void);
static NSString *GsonTypeAdapters_27_MONTH = @"month";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonTypeAdapters_27, MONTH, NSString *)

inline NSString *GsonTypeAdapters_27_get_DAY_OF_MONTH(void);
static NSString *GsonTypeAdapters_27_DAY_OF_MONTH = @"dayOfMonth";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonTypeAdapters_27, DAY_OF_MONTH, NSString *)

inline NSString *GsonTypeAdapters_27_get_HOUR_OF_DAY(void);
static NSString *GsonTypeAdapters_27_HOUR_OF_DAY = @"hourOfDay";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonTypeAdapters_27, HOUR_OF_DAY, NSString *)

inline NSString *GsonTypeAdapters_27_get_MINUTE(void);
static NSString *GsonTypeAdapters_27_MINUTE = @"minute";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonTypeAdapters_27, MINUTE, NSString *)

inline NSString *GsonTypeAdapters_27_get_SECOND(void);
static NSString *GsonTypeAdapters_27_SECOND = @"second";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonTypeAdapters_27, SECOND, NSString *)

__attribute__((unused)) static void GsonTypeAdapters_27_init(GsonTypeAdapters_27 *self);

__attribute__((unused)) static GsonTypeAdapters_27 *new_GsonTypeAdapters_27_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_27 *create_GsonTypeAdapters_27_init(void);

@interface GsonTypeAdapters_28 : GsonTypeAdapter

- (instancetype)init;

- (JavaUtilLocale *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilLocale *)value;

- (JavaUtilLocale *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilLocale *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilLocale *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_28)

__attribute__((unused)) static void GsonTypeAdapters_28_init(GsonTypeAdapters_28 *self);

__attribute__((unused)) static GsonTypeAdapters_28 *new_GsonTypeAdapters_28_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_28 *create_GsonTypeAdapters_28_init(void);

@interface GsonTypeAdapters_29 : GsonTypeAdapter

- (instancetype)init;

- (GsonJsonElement *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(GsonJsonElement *)value;

- (GsonJsonElement *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (GsonJsonElement *)fromJsonWithNSString:(NSString *)arg0;

- (GsonJsonElement *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_29)

__attribute__((unused)) static void GsonTypeAdapters_29_init(GsonTypeAdapters_29 *self);

__attribute__((unused)) static GsonTypeAdapters_29 *new_GsonTypeAdapters_29_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_29 *create_GsonTypeAdapters_29_init(void);

@interface GsonTypeAdapters_EnumTypeAdapter : GsonTypeAdapter {
 @public
  id<JavaUtilMap> nameToConstant_;
  id<JavaUtilMap> constantToName_;
}

- (instancetype)initWithIOSClass:(IOSClass *)classOfT;

- (JavaLangEnum *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangEnum *)value;

- (JavaLangEnum *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangEnum *)fromJsonWithNSString:(NSString *)arg0;

- (JavaLangEnum *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_EnumTypeAdapter)

J2OBJC_FIELD_SETTER(GsonTypeAdapters_EnumTypeAdapter, nameToConstant_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(GsonTypeAdapters_EnumTypeAdapter, constantToName_, id<JavaUtilMap>)

__attribute__((unused)) static void GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(GsonTypeAdapters_EnumTypeAdapter *self, IOSClass *classOfT);

__attribute__((unused)) static GsonTypeAdapters_EnumTypeAdapter *new_GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_EnumTypeAdapter *create_GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT);

J2OBJC_TYPE_LITERAL_HEADER(GsonTypeAdapters_EnumTypeAdapter)

@interface GsonTypeAdapters_30 : NSObject < GsonTypeAdapterFactory >

- (instancetype)init;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_30)

__attribute__((unused)) static void GsonTypeAdapters_30_init(GsonTypeAdapters_30 *self);

__attribute__((unused)) static GsonTypeAdapters_30 *new_GsonTypeAdapters_30_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_30 *create_GsonTypeAdapters_30_init(void);

@interface GsonTypeAdapters_31 : NSObject < GsonTypeAdapterFactory > {
 @public
  GsonTypeToken *val$type_;
  GsonTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithGsonTypeToken:(GsonTypeToken *)capture$0
                  withGsonTypeAdapter:(GsonTypeAdapter *)capture$1;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_31)

__attribute__((unused)) static void GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(GsonTypeAdapters_31 *self, GsonTypeToken *capture$0, GsonTypeAdapter *capture$1);

__attribute__((unused)) static GsonTypeAdapters_31 *new_GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(GsonTypeToken *capture$0, GsonTypeAdapter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_31 *create_GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(GsonTypeToken *capture$0, GsonTypeAdapter *capture$1);

@interface GsonTypeAdapters_32 : NSObject < GsonTypeAdapterFactory > {
 @public
  IOSClass *val$type_;
  GsonTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$1;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_32)

__attribute__((unused)) static void GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_32 *self, IOSClass *capture$0, GsonTypeAdapter *capture$1);

__attribute__((unused)) static GsonTypeAdapters_32 *new_GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_32 *create_GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1);

@interface GsonTypeAdapters_33 : NSObject < GsonTypeAdapterFactory > {
 @public
  IOSClass *val$unboxed_;
  IOSClass *val$boxed_;
  GsonTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$2;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_33)

__attribute__((unused)) static void GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_33 *self, IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2);

__attribute__((unused)) static GsonTypeAdapters_33 *new_GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_33 *create_GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2);

@interface GsonTypeAdapters_34 : NSObject < GsonTypeAdapterFactory > {
 @public
  IOSClass *val$base_;
  IOSClass *val$sub_;
  GsonTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$2;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_34)

__attribute__((unused)) static void GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_34 *self, IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2);

__attribute__((unused)) static GsonTypeAdapters_34 *new_GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_34 *create_GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2);

@interface GsonTypeAdapters_35 : NSObject < GsonTypeAdapterFactory > {
 @public
  IOSClass *val$clazz_;
  GsonTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$1;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_35)

__attribute__((unused)) static void GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_35 *self, IOSClass *capture$0, GsonTypeAdapter *capture$1);

__attribute__((unused)) static GsonTypeAdapters_35 *new_GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_35 *create_GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1);

@interface GsonTypeAdapters_35_1 : GsonTypeAdapter {
 @public
  GsonTypeAdapters_35 *this$0_;
  IOSClass *val$requestedType_;
}

- (instancetype)initWithGsonTypeAdapters_35:(GsonTypeAdapters_35 *)outer$
                               withIOSClass:(IOSClass *)capture$0;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(id)value;

- (id)readWithGsonJsonReader:(GsonJsonReader *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapters_35_1)

__attribute__((unused)) static void GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(GsonTypeAdapters_35_1 *self, GsonTypeAdapters_35 *outer$, IOSClass *capture$0);

__attribute__((unused)) static GsonTypeAdapters_35_1 *new_GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(GsonTypeAdapters_35 *outer$, IOSClass *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonTypeAdapters_35_1 *create_GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(GsonTypeAdapters_35 *outer$, IOSClass *capture$0);

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"

J2OBJC_INITIALIZED_DEFN(GsonTypeAdapters)

GsonTypeAdapter *GsonTypeAdapters_CLASS;
id<GsonTypeAdapterFactory> GsonTypeAdapters_CLASS_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_BIT_SET;
id<GsonTypeAdapterFactory> GsonTypeAdapters_BIT_SET_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_BOOLEAN;
GsonTypeAdapter *GsonTypeAdapters_BOOLEAN_AS_STRING;
id<GsonTypeAdapterFactory> GsonTypeAdapters_BOOLEAN_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_BYTE;
id<GsonTypeAdapterFactory> GsonTypeAdapters_BYTE_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_SHORT;
id<GsonTypeAdapterFactory> GsonTypeAdapters_SHORT_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_INTEGER;
id<GsonTypeAdapterFactory> GsonTypeAdapters_INTEGER_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_ATOMIC_INTEGER;
id<GsonTypeAdapterFactory> GsonTypeAdapters_ATOMIC_INTEGER_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_ATOMIC_BOOLEAN;
id<GsonTypeAdapterFactory> GsonTypeAdapters_ATOMIC_BOOLEAN_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_ATOMIC_INTEGER_ARRAY;
id<GsonTypeAdapterFactory> GsonTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_LONG;
GsonTypeAdapter *GsonTypeAdapters_FLOAT;
GsonTypeAdapter *GsonTypeAdapters_DOUBLE;
GsonTypeAdapter *GsonTypeAdapters_NUMBER;
id<GsonTypeAdapterFactory> GsonTypeAdapters_NUMBER_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_CHARACTER;
id<GsonTypeAdapterFactory> GsonTypeAdapters_CHARACTER_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_STRING;
GsonTypeAdapter *GsonTypeAdapters_BIG_DECIMAL;
GsonTypeAdapter *GsonTypeAdapters_BIG_INTEGER;
id<GsonTypeAdapterFactory> GsonTypeAdapters_STRING_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_STRING_BUILDER;
id<GsonTypeAdapterFactory> GsonTypeAdapters_STRING_BUILDER_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_STRING_BUFFER;
id<GsonTypeAdapterFactory> GsonTypeAdapters_STRING_BUFFER_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_URL;
id<GsonTypeAdapterFactory> GsonTypeAdapters_URL_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_URI;
id<GsonTypeAdapterFactory> GsonTypeAdapters_URI_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_INET_ADDRESS;
id<GsonTypeAdapterFactory> GsonTypeAdapters_INET_ADDRESS_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_UUID;
id<GsonTypeAdapterFactory> GsonTypeAdapters_UUID_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_CURRENCY;
id<GsonTypeAdapterFactory> GsonTypeAdapters_CURRENCY_FACTORY;
id<GsonTypeAdapterFactory> GsonTypeAdapters_TIMESTAMP_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_CALENDAR;
id<GsonTypeAdapterFactory> GsonTypeAdapters_CALENDAR_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_LOCALE;
id<GsonTypeAdapterFactory> GsonTypeAdapters_LOCALE_FACTORY;
GsonTypeAdapter *GsonTypeAdapters_JSON_ELEMENT;
id<GsonTypeAdapterFactory> GsonTypeAdapters_JSON_ELEMENT_FACTORY;
id<GsonTypeAdapterFactory> GsonTypeAdapters_ENUM_FACTORY;


#line 63
@implementation GsonTypeAdapters

+ (GsonTypeAdapter *)CLASS {
  return GsonTypeAdapters_CLASS;
}

+ (id<GsonTypeAdapterFactory>)CLASS_FACTORY {
  return GsonTypeAdapters_CLASS_FACTORY;
}

+ (GsonTypeAdapter *)BIT_SET {
  return GsonTypeAdapters_BIT_SET;
}

+ (id<GsonTypeAdapterFactory>)BIT_SET_FACTORY {
  return GsonTypeAdapters_BIT_SET_FACTORY;
}

+ (GsonTypeAdapter *)BOOLEAN {
  return GsonTypeAdapters_BOOLEAN;
}

+ (GsonTypeAdapter *)BOOLEAN_AS_STRING {
  return GsonTypeAdapters_BOOLEAN_AS_STRING;
}

+ (id<GsonTypeAdapterFactory>)BOOLEAN_FACTORY {
  return GsonTypeAdapters_BOOLEAN_FACTORY;
}

+ (GsonTypeAdapter *)BYTE {
  return GsonTypeAdapters_BYTE;
}

+ (id<GsonTypeAdapterFactory>)BYTE_FACTORY {
  return GsonTypeAdapters_BYTE_FACTORY;
}

+ (GsonTypeAdapter *)SHORT {
  return GsonTypeAdapters_SHORT;
}

+ (id<GsonTypeAdapterFactory>)SHORT_FACTORY {
  return GsonTypeAdapters_SHORT_FACTORY;
}

+ (GsonTypeAdapter *)INTEGER {
  return GsonTypeAdapters_INTEGER;
}

+ (id<GsonTypeAdapterFactory>)INTEGER_FACTORY {
  return GsonTypeAdapters_INTEGER_FACTORY;
}

+ (GsonTypeAdapter *)ATOMIC_INTEGER {
  return GsonTypeAdapters_ATOMIC_INTEGER;
}

+ (id<GsonTypeAdapterFactory>)ATOMIC_INTEGER_FACTORY {
  return GsonTypeAdapters_ATOMIC_INTEGER_FACTORY;
}

+ (GsonTypeAdapter *)ATOMIC_BOOLEAN {
  return GsonTypeAdapters_ATOMIC_BOOLEAN;
}

+ (id<GsonTypeAdapterFactory>)ATOMIC_BOOLEAN_FACTORY {
  return GsonTypeAdapters_ATOMIC_BOOLEAN_FACTORY;
}

+ (GsonTypeAdapter *)ATOMIC_INTEGER_ARRAY {
  return GsonTypeAdapters_ATOMIC_INTEGER_ARRAY;
}

+ (id<GsonTypeAdapterFactory>)ATOMIC_INTEGER_ARRAY_FACTORY {
  return GsonTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY;
}

+ (GsonTypeAdapter *)LONG {
  return GsonTypeAdapters_LONG;
}

+ (GsonTypeAdapter *)FLOAT {
  return GsonTypeAdapters_FLOAT;
}

+ (GsonTypeAdapter *)DOUBLE {
  return GsonTypeAdapters_DOUBLE;
}

+ (GsonTypeAdapter *)NUMBER {
  return GsonTypeAdapters_NUMBER;
}

+ (id<GsonTypeAdapterFactory>)NUMBER_FACTORY {
  return GsonTypeAdapters_NUMBER_FACTORY;
}

+ (GsonTypeAdapter *)CHARACTER {
  return GsonTypeAdapters_CHARACTER;
}

+ (id<GsonTypeAdapterFactory>)CHARACTER_FACTORY {
  return GsonTypeAdapters_CHARACTER_FACTORY;
}

+ (GsonTypeAdapter *)STRING {
  return GsonTypeAdapters_STRING;
}

+ (GsonTypeAdapter *)BIG_DECIMAL {
  return GsonTypeAdapters_BIG_DECIMAL;
}

+ (GsonTypeAdapter *)BIG_INTEGER {
  return GsonTypeAdapters_BIG_INTEGER;
}

+ (id<GsonTypeAdapterFactory>)STRING_FACTORY {
  return GsonTypeAdapters_STRING_FACTORY;
}

+ (GsonTypeAdapter *)STRING_BUILDER {
  return GsonTypeAdapters_STRING_BUILDER;
}

+ (id<GsonTypeAdapterFactory>)STRING_BUILDER_FACTORY {
  return GsonTypeAdapters_STRING_BUILDER_FACTORY;
}

+ (GsonTypeAdapter *)STRING_BUFFER {
  return GsonTypeAdapters_STRING_BUFFER;
}

+ (id<GsonTypeAdapterFactory>)STRING_BUFFER_FACTORY {
  return GsonTypeAdapters_STRING_BUFFER_FACTORY;
}

+ (GsonTypeAdapter *)URL {
  return GsonTypeAdapters_URL;
}

+ (id<GsonTypeAdapterFactory>)URL_FACTORY {
  return GsonTypeAdapters_URL_FACTORY;
}

+ (GsonTypeAdapter *)URI {
  return GsonTypeAdapters_URI;
}

+ (id<GsonTypeAdapterFactory>)URI_FACTORY {
  return GsonTypeAdapters_URI_FACTORY;
}

+ (GsonTypeAdapter *)INET_ADDRESS {
  return GsonTypeAdapters_INET_ADDRESS;
}

+ (id<GsonTypeAdapterFactory>)INET_ADDRESS_FACTORY {
  return GsonTypeAdapters_INET_ADDRESS_FACTORY;
}

+ (GsonTypeAdapter *)UUID {
  return GsonTypeAdapters_UUID;
}

+ (id<GsonTypeAdapterFactory>)UUID_FACTORY {
  return GsonTypeAdapters_UUID_FACTORY;
}

+ (GsonTypeAdapter *)CURRENCY {
  return GsonTypeAdapters_CURRENCY;
}

+ (id<GsonTypeAdapterFactory>)CURRENCY_FACTORY {
  return GsonTypeAdapters_CURRENCY_FACTORY;
}

+ (id<GsonTypeAdapterFactory>)TIMESTAMP_FACTORY {
  return GsonTypeAdapters_TIMESTAMP_FACTORY;
}

+ (GsonTypeAdapter *)CALENDAR {
  return GsonTypeAdapters_CALENDAR;
}

+ (id<GsonTypeAdapterFactory>)CALENDAR_FACTORY {
  return GsonTypeAdapters_CALENDAR_FACTORY;
}

+ (GsonTypeAdapter *)LOCALE {
  return GsonTypeAdapters_LOCALE;
}

+ (id<GsonTypeAdapterFactory>)LOCALE_FACTORY {
  return GsonTypeAdapters_LOCALE_FACTORY;
}

+ (GsonTypeAdapter *)JSON_ELEMENT {
  return GsonTypeAdapters_JSON_ELEMENT;
}

+ (id<GsonTypeAdapterFactory>)JSON_ELEMENT_FACTORY {
  return GsonTypeAdapters_JSON_ELEMENT_FACTORY;
}

+ (id<GsonTypeAdapterFactory>)ENUM_FACTORY {
  return GsonTypeAdapters_ENUM_FACTORY;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 64
- (instancetype)init {
  GsonTypeAdapters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 838
+ (id<GsonTypeAdapterFactory>)newFactoryWithGsonTypeToken:(GsonTypeToken *)type
                                      withGsonTypeAdapter:(GsonTypeAdapter *)typeAdapter {
  return GsonTypeAdapters_newFactoryWithGsonTypeToken_withGsonTypeAdapter_(type, typeAdapter);
}


#line 848
+ (id<GsonTypeAdapterFactory>)newFactoryWithIOSClass:(IOSClass *)type
                                 withGsonTypeAdapter:(GsonTypeAdapter *)typeAdapter {
  return GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(type, typeAdapter);
}


#line 861
+ (id<GsonTypeAdapterFactory>)newFactoryWithIOSClass:(IOSClass *)unboxed
                                        withIOSClass:(IOSClass *)boxed
                                 withGsonTypeAdapter:(GsonTypeAdapter *)typeAdapter {
  return GsonTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGsonTypeAdapter_(unboxed, boxed, typeAdapter);
}


#line 876
+ (id<GsonTypeAdapterFactory>)newFactoryForMultipleTypesWithIOSClass:(IOSClass *)base
                                                        withIOSClass:(IOSClass *)sub
                                                 withGsonTypeAdapter:(GsonTypeAdapter *)typeAdapter {
  return GsonTypeAdapters_newFactoryForMultipleTypesWithIOSClass_withIOSClass_withGsonTypeAdapter_(base, sub, typeAdapter);
}


#line 895
+ (id<GsonTypeAdapterFactory>)newTypeHierarchyFactoryWithIOSClass:(IOSClass *)clazz
                                              withGsonTypeAdapter:(GsonTypeAdapter *)typeAdapter {
  return GsonTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGsonTypeAdapter_(clazz, typeAdapter);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapterFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LGsonTypeAdapterFactory;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LGsonTypeAdapterFactory;", 0x9, 0, 5, -1, 6, -1, -1 },
    { NULL, "LGsonTypeAdapterFactory;", 0x9, 7, 5, -1, 8, -1, -1 },
    { NULL, "LGsonTypeAdapterFactory;", 0x9, 9, 3, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newFactoryWithGsonTypeToken:withGsonTypeAdapter:);
  methods[2].selector = @selector(newFactoryWithIOSClass:withGsonTypeAdapter:);
  methods[3].selector = @selector(newFactoryWithIOSClass:withIOSClass:withGsonTypeAdapter:);
  methods[4].selector = @selector(newFactoryForMultipleTypesWithIOSClass:withIOSClass:withGsonTypeAdapter:);
  methods[5].selector = @selector(newTypeHierarchyFactoryWithIOSClass:withGsonTypeAdapter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CLASS", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 11, 12, -1 },
    { "CLASS_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "BIT_SET", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 14, 15, -1 },
    { "BIT_SET_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "BOOLEAN", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 17, 18, -1 },
    { "BOOLEAN_AS_STRING", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 19, 18, -1 },
    { "BOOLEAN_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "BYTE", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 21, 22, -1 },
    { "BYTE_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "SHORT", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 24, 22, -1 },
    { "SHORT_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "INTEGER", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 26, 22, -1 },
    { "INTEGER_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "ATOMIC_INTEGER", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 28, 29, -1 },
    { "ATOMIC_INTEGER_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "ATOMIC_BOOLEAN", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 31, 32, -1 },
    { "ATOMIC_BOOLEAN_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "ATOMIC_INTEGER_ARRAY", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 34, 35, -1 },
    { "ATOMIC_INTEGER_ARRAY_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "LONG", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 37, 22, -1 },
    { "FLOAT", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 38, 22, -1 },
    { "DOUBLE", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 39, 22, -1 },
    { "NUMBER", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 40, 22, -1 },
    { "NUMBER_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "CHARACTER", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 42, 43, -1 },
    { "CHARACTER_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "STRING", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 45, 46, -1 },
    { "BIG_DECIMAL", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 47, 48, -1 },
    { "BIG_INTEGER", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 49, 50, -1 },
    { "STRING_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "STRING_BUILDER", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 52, 53, -1 },
    { "STRING_BUILDER_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "STRING_BUFFER", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 55, 56, -1 },
    { "STRING_BUFFER_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 57, -1, -1 },
    { "URL", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 58, 59, -1 },
    { "URL_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "URI", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 61, 62, -1 },
    { "URI_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 63, -1, -1 },
    { "INET_ADDRESS", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 64, 65, -1 },
    { "INET_ADDRESS_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 66, -1, -1 },
    { "UUID", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 67, 68, -1 },
    { "UUID_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 69, -1, -1 },
    { "CURRENCY", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 70, 71, -1 },
    { "CURRENCY_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 72, -1, -1 },
    { "TIMESTAMP_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 73, -1, -1 },
    { "CALENDAR", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 74, 75, -1 },
    { "CALENDAR_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 76, -1, -1 },
    { "LOCALE", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 77, 78, -1 },
    { "LOCALE_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 79, -1, -1 },
    { "JSON_ELEMENT", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 80, 81, -1 },
    { "JSON_ELEMENT_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 82, -1, -1 },
    { "ENUM_FACTORY", "LGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 83, -1, -1 },
  };
  static const void *ptrTable[] = { "newFactory", "LGsonTypeToken;LGsonTypeAdapter;", "<TT:Ljava/lang/Object;>(Lcom/google/gson/reflect/TypeToken<TTT;>;Lcom/google/gson/TypeAdapter<TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "LIOSClass;LGsonTypeAdapter;", "<TT:Ljava/lang/Object;>(Ljava/lang/Class<TTT;>;Lcom/google/gson/TypeAdapter<TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "LIOSClass;LIOSClass;LGsonTypeAdapter;", "<TT:Ljava/lang/Object;>(Ljava/lang/Class<TTT;>;Ljava/lang/Class<TTT;>;Lcom/google/gson/TypeAdapter<-TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "newFactoryForMultipleTypes", "<TT:Ljava/lang/Object;>(Ljava/lang/Class<TTT;>;Ljava/lang/Class<+TTT;>;Lcom/google/gson/TypeAdapter<-TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "newTypeHierarchyFactory", "<T1:Ljava/lang/Object;>(Ljava/lang/Class<TT1;>;Lcom/google/gson/TypeAdapter<TT1;>;)Lcom/google/gson/TypeAdapterFactory;", &GsonTypeAdapters_CLASS, "Lcom/google/gson/TypeAdapter<Ljava/lang/Class;>;", &GsonTypeAdapters_CLASS_FACTORY, &GsonTypeAdapters_BIT_SET, "Lcom/google/gson/TypeAdapter<Ljava/util/BitSet;>;", &GsonTypeAdapters_BIT_SET_FACTORY, &GsonTypeAdapters_BOOLEAN, "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;", &GsonTypeAdapters_BOOLEAN_AS_STRING, &GsonTypeAdapters_BOOLEAN_FACTORY, &GsonTypeAdapters_BYTE, "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;", &GsonTypeAdapters_BYTE_FACTORY, &GsonTypeAdapters_SHORT, &GsonTypeAdapters_SHORT_FACTORY, &GsonTypeAdapters_INTEGER, &GsonTypeAdapters_INTEGER_FACTORY, &GsonTypeAdapters_ATOMIC_INTEGER, "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicInteger;>;", &GsonTypeAdapters_ATOMIC_INTEGER_FACTORY, &GsonTypeAdapters_ATOMIC_BOOLEAN, "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicBoolean;>;", &GsonTypeAdapters_ATOMIC_BOOLEAN_FACTORY, &GsonTypeAdapters_ATOMIC_INTEGER_ARRAY, "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicIntegerArray;>;", &GsonTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY, &GsonTypeAdapters_LONG, &GsonTypeAdapters_FLOAT, &GsonTypeAdapters_DOUBLE, &GsonTypeAdapters_NUMBER, &GsonTypeAdapters_NUMBER_FACTORY, &GsonTypeAdapters_CHARACTER, "Lcom/google/gson/TypeAdapter<Ljava/lang/Character;>;", &GsonTypeAdapters_CHARACTER_FACTORY, &GsonTypeAdapters_STRING, "Lcom/google/gson/TypeAdapter<Ljava/lang/String;>;", &GsonTypeAdapters_BIG_DECIMAL, "Lcom/google/gson/TypeAdapter<Ljava/math/BigDecimal;>;", &GsonTypeAdapters_BIG_INTEGER, "Lcom/google/gson/TypeAdapter<Ljava/math/BigInteger;>;", &GsonTypeAdapters_STRING_FACTORY, &GsonTypeAdapters_STRING_BUILDER, "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuilder;>;", &GsonTypeAdapters_STRING_BUILDER_FACTORY, &GsonTypeAdapters_STRING_BUFFER, "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuffer;>;", &GsonTypeAdapters_STRING_BUFFER_FACTORY, &GsonTypeAdapters_URL, "Lcom/google/gson/TypeAdapter<Ljava/net/URL;>;", &GsonTypeAdapters_URL_FACTORY, &GsonTypeAdapters_URI, "Lcom/google/gson/TypeAdapter<Ljava/net/URI;>;", &GsonTypeAdapters_URI_FACTORY, &GsonTypeAdapters_INET_ADDRESS, "Lcom/google/gson/TypeAdapter<Ljava/net/InetAddress;>;", &GsonTypeAdapters_INET_ADDRESS_FACTORY, &GsonTypeAdapters_UUID, "Lcom/google/gson/TypeAdapter<Ljava/util/UUID;>;", &GsonTypeAdapters_UUID_FACTORY, &GsonTypeAdapters_CURRENCY, "Lcom/google/gson/TypeAdapter<Ljava/util/Currency;>;", &GsonTypeAdapters_CURRENCY_FACTORY, &GsonTypeAdapters_TIMESTAMP_FACTORY, &GsonTypeAdapters_CALENDAR, "Lcom/google/gson/TypeAdapter<Ljava/util/Calendar;>;", &GsonTypeAdapters_CALENDAR_FACTORY, &GsonTypeAdapters_LOCALE, "Lcom/google/gson/TypeAdapter<Ljava/util/Locale;>;", &GsonTypeAdapters_LOCALE_FACTORY, &GsonTypeAdapters_JSON_ELEMENT, "Lcom/google/gson/TypeAdapter<Lcom/google/gson/JsonElement;>;", &GsonTypeAdapters_JSON_ELEMENT_FACTORY, &GsonTypeAdapters_ENUM_FACTORY, "LGsonTypeAdapters_EnumTypeAdapter;" };
  static const J2ObjcClassInfo _GsonTypeAdapters = { "TypeAdapters", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x11, 6, 52, -1, 84, -1, -1, -1 };
  return &_GsonTypeAdapters;
}

+ (void)initialize {
  if (self == [GsonTypeAdapters class]) {
    GsonTypeAdapters_CLASS = new_GsonTypeAdapters_1_init();
    GsonTypeAdapters_CLASS_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 90
    IOSClass_class_(), GsonTypeAdapters_CLASS);
    GsonTypeAdapters_BIT_SET = new_GsonTypeAdapters_2_init();
    GsonTypeAdapters_BIT_SET_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 149
    JavaUtilBitSet_class_(), GsonTypeAdapters_BIT_SET);
    GsonTypeAdapters_BOOLEAN = new_GsonTypeAdapters_3_init();
    GsonTypeAdapters_BOOLEAN_AS_STRING = new_GsonTypeAdapters_4_init();
    GsonTypeAdapters_BOOLEAN_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGsonTypeAdapter_(
#line 188
    [IOSClass booleanClass], JavaLangBoolean_class_(), GsonTypeAdapters_BOOLEAN);
    GsonTypeAdapters_BYTE = new_GsonTypeAdapters_5_init();
    GsonTypeAdapters_BYTE_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGsonTypeAdapter_(
#line 211
    [IOSClass byteClass], JavaLangByte_class_(), GsonTypeAdapters_BYTE);
    GsonTypeAdapters_SHORT = new_GsonTypeAdapters_6_init();
    GsonTypeAdapters_SHORT_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGsonTypeAdapter_(
#line 233
    [IOSClass shortClass], JavaLangShort_class_(), GsonTypeAdapters_SHORT);
    GsonTypeAdapters_INTEGER = new_GsonTypeAdapters_7_init();
    GsonTypeAdapters_INTEGER_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGsonTypeAdapter_(
#line 254
    [IOSClass intClass], JavaLangInteger_class_(), GsonTypeAdapters_INTEGER);
    GsonTypeAdapters_ATOMIC_INTEGER =
#line 256
    [new_GsonTypeAdapters_8_init() nullSafe];
    GsonTypeAdapters_ATOMIC_INTEGER_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 269
    JavaUtilConcurrentAtomicAtomicInteger_class_(), GsonTypeAdapters_ATOMIC_INTEGER);
    GsonTypeAdapters_ATOMIC_BOOLEAN =
#line 271
    [new_GsonTypeAdapters_9_init() nullSafe];
    GsonTypeAdapters_ATOMIC_BOOLEAN_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 280
    JavaUtilConcurrentAtomicAtomicBoolean_class_(), GsonTypeAdapters_ATOMIC_BOOLEAN);
    GsonTypeAdapters_ATOMIC_INTEGER_ARRAY =
#line 282
    [new_GsonTypeAdapters_10_init() nullSafe];
    GsonTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 311
    JavaUtilConcurrentAtomicAtomicIntegerArray_class_(), GsonTypeAdapters_ATOMIC_INTEGER_ARRAY);
    GsonTypeAdapters_LONG = new_GsonTypeAdapters_11_init();
    GsonTypeAdapters_FLOAT = new_GsonTypeAdapters_12_init();
    GsonTypeAdapters_DOUBLE = new_GsonTypeAdapters_13_init();
    GsonTypeAdapters_NUMBER = new_GsonTypeAdapters_14_init();
    GsonTypeAdapters_NUMBER_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 382
    NSNumber_class_(), GsonTypeAdapters_NUMBER);
    GsonTypeAdapters_CHARACTER = new_GsonTypeAdapters_15_init();
    GsonTypeAdapters_CHARACTER_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGsonTypeAdapter_(
#line 404
    [IOSClass charClass], JavaLangCharacter_class_(), GsonTypeAdapters_CHARACTER);
    GsonTypeAdapters_STRING = new_GsonTypeAdapters_16_init();
    GsonTypeAdapters_BIG_DECIMAL = new_GsonTypeAdapters_17_init();
    GsonTypeAdapters_BIG_INTEGER = new_GsonTypeAdapters_18_init();
    GsonTypeAdapters_STRING_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 462
    NSString_class_(), GsonTypeAdapters_STRING);
    GsonTypeAdapters_STRING_BUILDER = new_GsonTypeAdapters_19_init();
    GsonTypeAdapters_STRING_BUILDER_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 480
    JavaLangStringBuilder_class_(), GsonTypeAdapters_STRING_BUILDER);
    GsonTypeAdapters_STRING_BUFFER = new_GsonTypeAdapters_20_init();
    GsonTypeAdapters_STRING_BUFFER_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 498
    JavaLangStringBuffer_class_(), GsonTypeAdapters_STRING_BUFFER);
    GsonTypeAdapters_URL = new_GsonTypeAdapters_21_init();
    GsonTypeAdapters_URL_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 516
    JavaNetURL_class_(), GsonTypeAdapters_URL);
    GsonTypeAdapters_URI = new_GsonTypeAdapters_22_init();
    GsonTypeAdapters_URI_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 538
    JavaNetURI_class_(), GsonTypeAdapters_URI);
    GsonTypeAdapters_INET_ADDRESS = new_GsonTypeAdapters_23_init();
    GsonTypeAdapters_INET_ADDRESS_FACTORY = GsonTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGsonTypeAdapter_(
#line 557
    JavaNetInetAddress_class_(), GsonTypeAdapters_INET_ADDRESS);
    GsonTypeAdapters_UUID = new_GsonTypeAdapters_24_init();
    GsonTypeAdapters_UUID_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 574
    JavaUtilUUID_class_(), GsonTypeAdapters_UUID);
    GsonTypeAdapters_CURRENCY =
#line 576
    [new_GsonTypeAdapters_25_init() nullSafe];
    GsonTypeAdapters_CURRENCY_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 586
    JavaUtilCurrency_class_(), GsonTypeAdapters_CURRENCY);
    GsonTypeAdapters_TIMESTAMP_FACTORY = new_GsonTypeAdapters_26_init();
    GsonTypeAdapters_CALENDAR = new_GsonTypeAdapters_27_init();
    GsonTypeAdapters_CALENDAR_FACTORY = GsonTypeAdapters_newFactoryForMultipleTypesWithIOSClass_withIOSClass_withGsonTypeAdapter_(
#line 675
    JavaUtilCalendar_class_(), JavaUtilGregorianCalendar_class_(), GsonTypeAdapters_CALENDAR);
    GsonTypeAdapters_LOCALE = new_GsonTypeAdapters_28_init();
    GsonTypeAdapters_LOCALE_FACTORY = GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(
#line 712
    JavaUtilLocale_class_(), GsonTypeAdapters_LOCALE);
    GsonTypeAdapters_JSON_ELEMENT = new_GsonTypeAdapters_29_init();
    GsonTypeAdapters_JSON_ELEMENT_FACTORY = GsonTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGsonTypeAdapter_(
#line 787
    GsonJsonElement_class_(), GsonTypeAdapters_JSON_ELEMENT);
    GsonTypeAdapters_ENUM_FACTORY = new_GsonTypeAdapters_30_init();
    J2OBJC_SET_INITIALIZED(GsonTypeAdapters)
  }
}

@end


#line 64
void GsonTypeAdapters_init(GsonTypeAdapters *self) {
  NSObject_init(self);
  
#line 65
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 64
GsonTypeAdapters *new_GsonTypeAdapters_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters, init)
}


#line 64
GsonTypeAdapters *create_GsonTypeAdapters_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters, init)
}


#line 838
id<GsonTypeAdapterFactory> GsonTypeAdapters_newFactoryWithGsonTypeToken_withGsonTypeAdapter_(GsonTypeToken *type, GsonTypeAdapter *typeAdapter) {
  GsonTypeAdapters_initialize();
  return new_GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(type, typeAdapter);
}


#line 848
id<GsonTypeAdapterFactory> GsonTypeAdapters_newFactoryWithIOSClass_withGsonTypeAdapter_(IOSClass *type, GsonTypeAdapter *typeAdapter) {
  GsonTypeAdapters_initialize();
  return new_GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(type, typeAdapter);
}


#line 861
id<GsonTypeAdapterFactory> GsonTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *unboxed, IOSClass *boxed, GsonTypeAdapter *typeAdapter) {
  GsonTypeAdapters_initialize();
  return new_GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(unboxed, boxed, typeAdapter);
}


#line 876
id<GsonTypeAdapterFactory> GsonTypeAdapters_newFactoryForMultipleTypesWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *base, IOSClass *sub, GsonTypeAdapter *typeAdapter) {
  GsonTypeAdapters_initialize();
  return new_GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(base, sub, typeAdapter);
}


#line 895
id<GsonTypeAdapterFactory> GsonTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGsonTypeAdapter_(IOSClass *clazz, GsonTypeAdapter *typeAdapter) {
  GsonTypeAdapters_initialize();
  return new_GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(clazz, typeAdapter);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonTypeAdapters)

J2OBJC_NAME_MAPPING(GsonTypeAdapters, "com.google.gson.internal.bind", "Gson")

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 69
@implementation GsonTypeAdapters_1

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 69
- (instancetype)init {
  GsonTypeAdapters_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 70
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(IOSClass *)value {
  
#line 72
  if (value == nil) {
    (void) [((GsonJsonWriter *) nil_chk(outArg)) nullValue];
  }
  else {
    
#line 75
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$$$", @"Attempted to serialize java.lang.Class: ",
#line 76
    [value getName], @". Forgot to register a type adapter?"));
  }
}


#line 79
- (IOSClass *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 81
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  else {
    
#line 85
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(
#line 86
    @"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeWithGsonJsonWriter:withId:);
  methods[2].selector = @selector(readWithGsonJsonReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "write", "LGsonJsonWriter;LIOSClass;", "LJavaIoIOException;", "read", "LGsonJsonReader;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Class;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_1 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_1;
}

@end


#line 69
void GsonTypeAdapters_1_init(GsonTypeAdapters_1 *self) {
  GsonTypeAdapter_init(self);
}


#line 69
GsonTypeAdapters_1 *new_GsonTypeAdapters_1_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_1, init)
}


#line 69
GsonTypeAdapters_1 *create_GsonTypeAdapters_1_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_1, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 92
@implementation GsonTypeAdapters_2

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 92
- (instancetype)init {
  GsonTypeAdapters_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 93
- (JavaUtilBitSet *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  
#line 99
  JavaUtilBitSet *bitset = new_JavaUtilBitSet_init();
  [inArg beginArray];
  jint i = 0;
  GsonJsonToken *tokenType = [inArg peek];
  while (tokenType != JreLoadEnum(GsonJsonToken, END_ARRAY)) {
    jboolean set;
    {
      
#line 113
      NSString *stringValue;
      
#line 105
      switch ([tokenType ordinal]) {
        case GsonJsonToken_Enum_NUMBER:
        set = ([inArg nextInt] != 0);
        break;
        case GsonJsonToken_Enum_BOOLEAN:
        set = [inArg nextBoolean];
        break;
        case GsonJsonToken_Enum_STRING:
        stringValue = [inArg nextString];
        @try {
          set = (JavaLangInteger_parseIntWithNSString_(stringValue) != 0);
        }
        @catch (
#line 116
        JavaLangNumberFormatException *e) {
          @throw new_GsonJsonSyntaxException_initWithNSString_(JreStrcat("$$", @"Error: Expecting: bitset number value (1, 0), Found: ",
#line 118
          stringValue));
        }
        break;
        default:
        @throw new_GsonJsonSyntaxException_initWithNSString_(JreStrcat("$@", @"Invalid bitset value type: ", tokenType));
      }
    }
    
#line 124
    if (set) {
      [bitset setWithInt:i];
    }
    ++i;
    tokenType = [inArg peek];
  }
  [inArg endArray];
  return bitset;
}


#line 134
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilBitSet *)src {
  if (src == nil) {
    (void) [((GsonJsonWriter *) nil_chk(outArg)) nullValue];
    return;
  }
  
#line 140
  (void) [((GsonJsonWriter *) nil_chk(outArg)) beginArray];
  for (jint i = 0; i < [src length]; i++) {
    jint value = ([src getWithInt:i]) ? 1 : 0;
    (void) [outArg valueWithLong:value];
  }
  (void) [outArg endArray];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilBitSet;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilBitSet;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/BitSet;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_2 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_2;
}

@end


#line 92
void GsonTypeAdapters_2_init(GsonTypeAdapters_2 *self) {
  GsonTypeAdapter_init(self);
}


#line 92
GsonTypeAdapters_2 *new_GsonTypeAdapters_2_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_2, init)
}


#line 92
GsonTypeAdapters_2 *create_GsonTypeAdapters_2_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_2, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 151
@implementation GsonTypeAdapters_3

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 151
- (instancetype)init {
  GsonTypeAdapters_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 152
- (JavaLangBoolean *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 154
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  else
#line 157
  if ([inArg peek] == JreLoadEnum(GsonJsonToken, STRING)) {
    
#line 159
    return JavaLangBoolean_valueOfWithBoolean_(JavaLangBoolean_parseBooleanWithNSString_([inArg nextString]));
  }
  return JavaLangBoolean_valueOfWithBoolean_([inArg nextBoolean]);
}


#line 163
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value {
  
#line 165
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithJavaLangBoolean:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaLangBoolean;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_3 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_3;
}

@end


#line 151
void GsonTypeAdapters_3_init(GsonTypeAdapters_3 *self) {
  GsonTypeAdapter_init(self);
}


#line 151
GsonTypeAdapters_3 *new_GsonTypeAdapters_3_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_3, init)
}


#line 151
GsonTypeAdapters_3 *create_GsonTypeAdapters_3_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_3, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 173
@implementation GsonTypeAdapters_4

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 173
- (instancetype)init {
  GsonTypeAdapters_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 174
- (JavaLangBoolean *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangBoolean_valueOfWithNSString_([inArg nextString]);
}

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value {
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? @"null" : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaLangBoolean;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_4 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_4;
}

@end


#line 173
void GsonTypeAdapters_4_init(GsonTypeAdapters_4 *self) {
  GsonTypeAdapter_init(self);
}


#line 173
GsonTypeAdapters_4 *new_GsonTypeAdapters_4_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_4, init)
}


#line 173
GsonTypeAdapters_4 *create_GsonTypeAdapters_4_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_4, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 190
@implementation GsonTypeAdapters_5

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 190
- (instancetype)init {
  GsonTypeAdapters_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 191
- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 193
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    jint intValue = [inArg nextInt];
    return JavaLangByte_valueOfWithByte_((jbyte) intValue);
  }
  @catch (
#line 200
  JavaLangNumberFormatException *e) {
    @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}


#line 204
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value {
  
#line 206
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSNumber;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_5 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_5;
}

@end


#line 190
void GsonTypeAdapters_5_init(GsonTypeAdapters_5 *self) {
  GsonTypeAdapter_init(self);
}


#line 190
GsonTypeAdapters_5 *new_GsonTypeAdapters_5_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_5, init)
}


#line 190
GsonTypeAdapters_5 *create_GsonTypeAdapters_5_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_5, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 213
@implementation GsonTypeAdapters_6

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 213
- (instancetype)init {
  GsonTypeAdapters_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 214
- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 216
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return JavaLangShort_valueOfWithShort_((jshort) [inArg nextInt]);
  }
  @catch (
#line 222
  JavaLangNumberFormatException *e) {
    @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}


#line 226
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value {
  
#line 228
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSNumber;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_6 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_6;
}

@end


#line 213
void GsonTypeAdapters_6_init(GsonTypeAdapters_6 *self) {
  GsonTypeAdapter_init(self);
}


#line 213
GsonTypeAdapters_6 *new_GsonTypeAdapters_6_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_6, init)
}


#line 213
GsonTypeAdapters_6 *create_GsonTypeAdapters_6_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_6, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 235
@implementation GsonTypeAdapters_7

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 235
- (instancetype)init {
  GsonTypeAdapters_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 236
- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 238
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return JavaLangInteger_valueOfWithInt_([inArg nextInt]);
  }
  @catch (
#line 244
  JavaLangNumberFormatException *e) {
    @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}


#line 248
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value {
  
#line 250
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSNumber;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_7 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_7;
}

@end


#line 235
void GsonTypeAdapters_7_init(GsonTypeAdapters_7 *self) {
  GsonTypeAdapter_init(self);
}


#line 235
GsonTypeAdapters_7 *new_GsonTypeAdapters_7_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_7, init)
}


#line 235
GsonTypeAdapters_7 *create_GsonTypeAdapters_7_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_7, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 256
@implementation GsonTypeAdapters_8

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 256
- (instancetype)init {
  GsonTypeAdapters_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 257
- (JavaUtilConcurrentAtomicAtomicInteger *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  @try {
    return new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_([((GsonJsonReader *) nil_chk(inArg)) nextInt]);
  }
  @catch (
#line 260
  JavaLangNumberFormatException *e) {
    @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}


#line 264
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicInteger *)value {
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithLong:[((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(value)) get]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicInteger;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilConcurrentAtomicAtomicInteger;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicInteger;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_8 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_8;
}

@end


#line 256
void GsonTypeAdapters_8_init(GsonTypeAdapters_8 *self) {
  GsonTypeAdapter_init(self);
}


#line 256
GsonTypeAdapters_8 *new_GsonTypeAdapters_8_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_8, init)
}


#line 256
GsonTypeAdapters_8 *create_GsonTypeAdapters_8_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_8, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 271
@implementation GsonTypeAdapters_9

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 271
- (instancetype)init {
  GsonTypeAdapters_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 272
- (JavaUtilConcurrentAtomicAtomicBoolean *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  return new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_([((GsonJsonReader *) nil_chk(inArg)) nextBoolean]);
}


#line 275
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicBoolean *)value {
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithBoolean:[((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(value)) get]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicBoolean;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilConcurrentAtomicAtomicBoolean;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicBoolean;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_9 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_9;
}

@end


#line 271
void GsonTypeAdapters_9_init(GsonTypeAdapters_9 *self) {
  GsonTypeAdapter_init(self);
}


#line 271
GsonTypeAdapters_9 *new_GsonTypeAdapters_9_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_9, init)
}


#line 271
GsonTypeAdapters_9 *create_GsonTypeAdapters_9_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_9, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 282
@implementation GsonTypeAdapters_10

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 282
- (instancetype)init {
  GsonTypeAdapters_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 283
- (JavaUtilConcurrentAtomicAtomicIntegerArray *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  [((GsonJsonReader *) nil_chk(inArg)) beginArray];
  while ([inArg hasNext]) {
    @try {
      jint integer = [inArg nextInt];
      [list addWithId:JavaLangInteger_valueOfWithInt_(integer)];
    }
    @catch (
#line 290
    JavaLangNumberFormatException *e) {
      @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
    }
  }
  [inArg endArray];
  jint length = [list size];
  JavaUtilConcurrentAtomicAtomicIntegerArray *array = new_JavaUtilConcurrentAtomicAtomicIntegerArray_initWithInt_(length);
  for (jint i = 0; i < length; ++i) {
    [array setWithInt:i withInt:[((JavaLangInteger *) nil_chk([list getWithInt:i])) intValue]];
  }
  return array;
}


#line 302
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicIntegerArray *)value {
  (void) [((GsonJsonWriter *) nil_chk(outArg)) beginArray];
  for (jint i = 0, length = [((JavaUtilConcurrentAtomicAtomicIntegerArray *) nil_chk(value)) length]; i < length; i++) {
    (void) [outArg valueWithLong:[value getWithInt:i]];
  }
  (void) [outArg endArray];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicIntegerArray;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilConcurrentAtomicAtomicIntegerArray;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicIntegerArray;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_10 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_10;
}

@end


#line 282
void GsonTypeAdapters_10_init(GsonTypeAdapters_10 *self) {
  GsonTypeAdapter_init(self);
}


#line 282
GsonTypeAdapters_10 *new_GsonTypeAdapters_10_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_10, init)
}


#line 282
GsonTypeAdapters_10 *create_GsonTypeAdapters_10_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_10, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 313
@implementation GsonTypeAdapters_11

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 313
- (instancetype)init {
  GsonTypeAdapters_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 314
- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 316
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return JavaLangLong_valueOfWithLong_([inArg nextLong]);
  }
  @catch (
#line 322
  JavaLangNumberFormatException *e) {
    @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}


#line 326
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value {
  
#line 328
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSNumber;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_11 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_11;
}

@end


#line 313
void GsonTypeAdapters_11_init(GsonTypeAdapters_11 *self) {
  GsonTypeAdapter_init(self);
}


#line 313
GsonTypeAdapters_11 *new_GsonTypeAdapters_11_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_11, init)
}


#line 313
GsonTypeAdapters_11 *create_GsonTypeAdapters_11_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_11, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 332
@implementation GsonTypeAdapters_12

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 332
- (instancetype)init {
  GsonTypeAdapters_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 333
- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 335
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangFloat_valueOfWithFloat_((jfloat) [inArg nextDouble]);
}


#line 341
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value {
  
#line 343
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSNumber;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_12 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_12;
}

@end


#line 332
void GsonTypeAdapters_12_init(GsonTypeAdapters_12 *self) {
  GsonTypeAdapter_init(self);
}


#line 332
GsonTypeAdapters_12 *new_GsonTypeAdapters_12_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_12, init)
}


#line 332
GsonTypeAdapters_12 *create_GsonTypeAdapters_12_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_12, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 347
@implementation GsonTypeAdapters_13

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 347
- (instancetype)init {
  GsonTypeAdapters_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 348
- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 350
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangDouble_valueOfWithDouble_([inArg nextDouble]);
}


#line 356
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value {
  
#line 358
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSNumber;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_13 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_13;
}

@end


#line 347
void GsonTypeAdapters_13_init(GsonTypeAdapters_13 *self) {
  GsonTypeAdapter_init(self);
}


#line 347
GsonTypeAdapters_13 *new_GsonTypeAdapters_13_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_13, init)
}


#line 347
GsonTypeAdapters_13 *create_GsonTypeAdapters_13_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_13, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 362
@implementation GsonTypeAdapters_14

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 362
- (instancetype)init {
  GsonTypeAdapters_14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 363
- (NSNumber *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 365
  GsonJsonToken *jsonToken = [((GsonJsonReader *) nil_chk(inArg)) peek];
  switch ([jsonToken ordinal]) {
    case GsonJsonToken_Enum_NULL:
    [inArg nextNull];
    return nil;
    case GsonJsonToken_Enum_NUMBER:
    return new_GsonLazilyParsedNumber_initWithNSString_([inArg nextString]);
    default:
    @throw new_GsonJsonSyntaxException_initWithNSString_(JreStrcat("$@", @"Expecting number, got: ", jsonToken));
  }
}


#line 376
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSNumber *)value {
  
#line 378
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSNumber;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_14 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_14;
}

@end


#line 362
void GsonTypeAdapters_14_init(GsonTypeAdapters_14 *self) {
  GsonTypeAdapter_init(self);
}


#line 362
GsonTypeAdapters_14 *new_GsonTypeAdapters_14_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_14, init)
}


#line 362
GsonTypeAdapters_14 *create_GsonTypeAdapters_14_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_14, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 384
@implementation GsonTypeAdapters_15

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 384
- (instancetype)init {
  GsonTypeAdapters_15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 385
- (JavaLangCharacter *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 387
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  NSString *str = [inArg nextString];
  if ([((NSString *) nil_chk(str)) java_length] != 1) {
    @throw new_GsonJsonSyntaxException_initWithNSString_(JreStrcat("$$", @"Expecting character, got: ", str));
  }
  return JavaLangCharacter_valueOfWithChar_([str charAtWithInt:0]);
}


#line 397
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangCharacter *)value {
  
#line 399
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : NSString_java_valueOf_(value)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharacter;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaLangCharacter;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Character;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_15 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_15;
}

@end


#line 384
void GsonTypeAdapters_15_init(GsonTypeAdapters_15 *self) {
  GsonTypeAdapter_init(self);
}


#line 384
GsonTypeAdapters_15 *new_GsonTypeAdapters_15_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_15, init)
}


#line 384
GsonTypeAdapters_15 *create_GsonTypeAdapters_15_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_15, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 406
@implementation GsonTypeAdapters_16

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 406
- (instancetype)init {
  GsonTypeAdapters_16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 407
- (NSString *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 409
  GsonJsonToken *peek = [((GsonJsonReader *) nil_chk(inArg)) peek];
  if (peek == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  
#line 415
  if (peek == JreLoadEnum(GsonJsonToken, BOOLEAN)) {
    return JavaLangBoolean_toStringWithBoolean_([inArg nextBoolean]);
  }
  return [inArg nextString];
}


#line 420
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(NSString *)value {
  
#line 422
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LNSString;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_16 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_16;
}

@end


#line 406
void GsonTypeAdapters_16_init(GsonTypeAdapters_16 *self) {
  GsonTypeAdapter_init(self);
}


#line 406
GsonTypeAdapters_16 *new_GsonTypeAdapters_16_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_16, init)
}


#line 406
GsonTypeAdapters_16 *create_GsonTypeAdapters_16_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_16, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 426
@implementation GsonTypeAdapters_17

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 426
- (instancetype)init {
  GsonTypeAdapters_17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 427
- (JavaMathBigDecimal *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return new_JavaMathBigDecimal_initWithNSString_([inArg nextString]);
  }
  @catch (
#line 434
  JavaLangNumberFormatException *e) {
    @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}


#line 439
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaMathBigDecimal *)value {
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaMathBigDecimal;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/math/BigDecimal;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_17 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_17;
}

@end


#line 426
void GsonTypeAdapters_17_init(GsonTypeAdapters_17 *self) {
  GsonTypeAdapter_init(self);
}


#line 426
GsonTypeAdapters_17 *new_GsonTypeAdapters_17_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_17, init)
}


#line 426
GsonTypeAdapters_17 *create_GsonTypeAdapters_17_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_17, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 444
@implementation GsonTypeAdapters_18

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 444
- (instancetype)init {
  GsonTypeAdapters_18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 445
- (JavaMathBigInteger *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return new_JavaMathBigInteger_initWithNSString_([inArg nextString]);
  }
  @catch (
#line 452
  JavaLangNumberFormatException *e) {
    @throw new_GsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}


#line 457
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaMathBigInteger *)value {
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaMathBigInteger;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/math/BigInteger;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_18 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_18;
}

@end


#line 444
void GsonTypeAdapters_18_init(GsonTypeAdapters_18 *self) {
  GsonTypeAdapter_init(self);
}


#line 444
GsonTypeAdapters_18 *new_GsonTypeAdapters_18_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_18, init)
}


#line 444
GsonTypeAdapters_18 *create_GsonTypeAdapters_18_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_18, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 464
@implementation GsonTypeAdapters_19

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 464
- (instancetype)init {
  GsonTypeAdapters_19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 465
- (JavaLangStringBuilder *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 467
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return new_JavaLangStringBuilder_initWithNSString_([inArg nextString]);
}


#line 473
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangStringBuilder *)value {
  
#line 475
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaLangStringBuilder;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuilder;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_19 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_19;
}

@end


#line 464
void GsonTypeAdapters_19_init(GsonTypeAdapters_19 *self) {
  GsonTypeAdapter_init(self);
}


#line 464
GsonTypeAdapters_19 *new_GsonTypeAdapters_19_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_19, init)
}


#line 464
GsonTypeAdapters_19 *create_GsonTypeAdapters_19_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_19, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 482
@implementation GsonTypeAdapters_20

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 482
- (instancetype)init {
  GsonTypeAdapters_20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 483
- (JavaLangStringBuffer *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 485
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return new_JavaLangStringBuffer_initWithNSString_([inArg nextString]);
}


#line 491
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangStringBuffer *)value {
  
#line 493
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuffer;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaLangStringBuffer;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuffer;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_20 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_20;
}

@end


#line 482
void GsonTypeAdapters_20_init(GsonTypeAdapters_20 *self) {
  GsonTypeAdapter_init(self);
}


#line 482
GsonTypeAdapters_20 *new_GsonTypeAdapters_20_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_20, init)
}


#line 482
GsonTypeAdapters_20 *create_GsonTypeAdapters_20_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_20, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 500
@implementation GsonTypeAdapters_21

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 500
- (instancetype)init {
  GsonTypeAdapters_21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 501
- (JavaNetURL *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 503
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  NSString *nextString = [inArg nextString];
  return [@"null" isEqual:nextString] ? nil : new_JavaNetURL_initWithNSString_(nextString);
}


#line 510
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaNetURL *)value {
  
#line 512
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value toExternalForm]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURL;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaNetURL;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/net/URL;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_21 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_21;
}

@end


#line 500
void GsonTypeAdapters_21_init(GsonTypeAdapters_21 *self) {
  GsonTypeAdapter_init(self);
}


#line 500
GsonTypeAdapters_21 *new_GsonTypeAdapters_21_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_21, init)
}


#line 500
GsonTypeAdapters_21 *create_GsonTypeAdapters_21_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_21, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 518
@implementation GsonTypeAdapters_22

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 518
- (instancetype)init {
  GsonTypeAdapters_22_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 519
- (JavaNetURI *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 521
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    NSString *nextString = [inArg nextString];
    return [@"null" isEqual:nextString] ? nil : new_JavaNetURI_initWithNSString_(nextString);
  }
  @catch (
#line 528
  JavaNetURISyntaxException *e) {
    @throw new_GsonJsonIOException_initWithJavaLangThrowable_(e);
  }
}


#line 532
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaNetURI *)value {
  
#line 534
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value toASCIIString]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURI;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaNetURI;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/net/URI;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_22 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_22;
}

@end


#line 518
void GsonTypeAdapters_22_init(GsonTypeAdapters_22 *self) {
  GsonTypeAdapter_init(self);
}


#line 518
GsonTypeAdapters_22 *new_GsonTypeAdapters_22_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_22, init)
}


#line 518
GsonTypeAdapters_22 *create_GsonTypeAdapters_22_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_22, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 540
@implementation GsonTypeAdapters_23

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 540
- (instancetype)init {
  GsonTypeAdapters_23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 541
- (JavaNetInetAddress *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 543
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  
#line 548
  return JavaNetInetAddress_getByNameWithNSString_([inArg nextString]);
}


#line 550
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaNetInetAddress *)value {
  
#line 552
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value getHostAddress]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaNetInetAddress;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/net/InetAddress;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_23 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_23;
}

@end


#line 540
void GsonTypeAdapters_23_init(GsonTypeAdapters_23 *self) {
  GsonTypeAdapter_init(self);
}


#line 540
GsonTypeAdapters_23 *new_GsonTypeAdapters_23_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_23, init)
}


#line 540
GsonTypeAdapters_23 *create_GsonTypeAdapters_23_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_23, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 559
@implementation GsonTypeAdapters_24

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 559
- (instancetype)init {
  GsonTypeAdapters_24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 560
- (JavaUtilUUID *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 562
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaUtilUUID_fromStringWithNSString_([inArg nextString]);
}


#line 568
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilUUID *)value {
  
#line 570
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilUUID;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilUUID;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/UUID;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_24 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_24;
}

@end


#line 559
void GsonTypeAdapters_24_init(GsonTypeAdapters_24 *self) {
  GsonTypeAdapter_init(self);
}


#line 559
GsonTypeAdapters_24 *new_GsonTypeAdapters_24_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_24, init)
}


#line 559
GsonTypeAdapters_24 *create_GsonTypeAdapters_24_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_24, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 576
@implementation GsonTypeAdapters_25

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 576
- (instancetype)init {
  GsonTypeAdapters_25_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 577
- (JavaUtilCurrency *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 579
  return JavaUtilCurrency_getInstanceWithNSString_([((GsonJsonReader *) nil_chk(inArg)) nextString]);
}


#line 581
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilCurrency *)value {
  
#line 583
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:[((JavaUtilCurrency *) nil_chk(value)) getCurrencyCode]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCurrency;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilCurrency;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/Currency;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_25 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_25;
}

@end


#line 576
void GsonTypeAdapters_25_init(GsonTypeAdapters_25 *self) {
  GsonTypeAdapter_init(self);
}


#line 576
GsonTypeAdapters_25 *new_GsonTypeAdapters_25_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_25, init)
}


#line 576
GsonTypeAdapters_25 *create_GsonTypeAdapters_25_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_25, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 588
@implementation GsonTypeAdapters_26

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 588
- (instancetype)init {
  GsonTypeAdapters_26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 589
- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken {
  
#line 591
  if ([((GsonTypeToken *) nil_chk(typeToken)) getRawType] != JavaSqlTimestamp_class_()) {
    return nil;
  }
  
#line 595
  GsonTypeAdapter *dateTypeAdapter = [((GsonGson *) nil_chk(gson)) getAdapterWithIOSClass:JavaUtilDate_class_()];
  return new_GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(dateTypeAdapter);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWithGsonGson:withGsonTypeToken:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "LGsonGson;LGsonTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "LGsonTypeAdapters;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_26 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, -1, -1 };
  return &_GsonTypeAdapters_26;
}

@end


#line 588
void GsonTypeAdapters_26_init(GsonTypeAdapters_26 *self) {
  NSObject_init(self);
}


#line 588
GsonTypeAdapters_26 *new_GsonTypeAdapters_26_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_26, init)
}


#line 588
GsonTypeAdapters_26 *create_GsonTypeAdapters_26_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_26, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 596
@implementation GsonTypeAdapters_26_1


#line 596
- (instancetype)initWithGsonTypeAdapter:(GsonTypeAdapter *)capture$0 {
  GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(self, capture$0);
  return self;
}


#line 597
- (JavaSqlTimestamp *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  JavaUtilDate *date = [((GsonTypeAdapter *) nil_chk(val$dateTypeAdapter_)) readWithGsonJsonReader:inArg];
  return date != nil ? new_JavaSqlTimestamp_initWithLong_([date getTime]) : nil;
}

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaSqlTimestamp *)value {
  [((GsonTypeAdapter *) nil_chk(val$dateTypeAdapter_)) writeWithGsonJsonWriter:outArg withId:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSqlTimestamp;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonTypeAdapter:);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$dateTypeAdapter_", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaSqlTimestamp;", "Lcom/google/gson/TypeAdapter<Ljava/util/Date;>;", "LGsonTypeAdapters_26;", "createWithGsonGson:withGsonTypeToken:", "Lcom/google/gson/TypeAdapter<Ljava/sql/Timestamp;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_26_1 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 1, 6, -1, 7, 8, -1 };
  return &_GsonTypeAdapters_26_1;
}

@end


#line 596
void GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(GsonTypeAdapters_26_1 *self, GsonTypeAdapter *capture$0) {
  self->val$dateTypeAdapter_ = capture$0;
  GsonTypeAdapter_init(self);
}


#line 596
GsonTypeAdapters_26_1 *new_GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(GsonTypeAdapter *capture$0) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_26_1, initWithGsonTypeAdapter_, capture$0)
}


#line 596
GsonTypeAdapters_26_1 *create_GsonTypeAdapters_26_1_initWithGsonTypeAdapter_(GsonTypeAdapter *capture$0) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_26_1, initWithGsonTypeAdapter_, capture$0)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 609
@implementation GsonTypeAdapters_27

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 609
- (instancetype)init {
  GsonTypeAdapters_27_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 617
- (JavaUtilCalendar *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 619
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  [inArg beginObject];
  jint year = 0;
  jint month = 0;
  jint dayOfMonth = 0;
  jint hourOfDay = 0;
  jint minute = 0;
  jint second = 0;
  while ([inArg peek] != JreLoadEnum(GsonJsonToken, END_OBJECT)) {
    NSString *name = [inArg nextName];
    jint value = [inArg nextInt];
    if ([((NSString *) nil_chk(GsonTypeAdapters_27_YEAR)) isEqual:name]) {
      year = value;
    }
    else
#line 635
    if ([((NSString *) nil_chk(GsonTypeAdapters_27_MONTH)) isEqual:name]) {
      month = value;
    }
    else
#line 637
    if ([((NSString *) nil_chk(GsonTypeAdapters_27_DAY_OF_MONTH)) isEqual:name]) {
      dayOfMonth = value;
    }
    else
#line 639
    if ([((NSString *) nil_chk(GsonTypeAdapters_27_HOUR_OF_DAY)) isEqual:name]) {
      hourOfDay = value;
    }
    else
#line 641
    if ([((NSString *) nil_chk(GsonTypeAdapters_27_MINUTE)) isEqual:name]) {
      minute = value;
    }
    else
#line 643
    if ([((NSString *) nil_chk(GsonTypeAdapters_27_SECOND)) isEqual:name]) {
      second = value;
    }
  }
  [inArg endObject];
  return new_JavaUtilGregorianCalendar_initWithInt_withInt_withInt_withInt_withInt_withInt_(year, month, dayOfMonth, hourOfDay, minute, second);
}


#line 651
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilCalendar *)value {
  
#line 653
  if (value == nil) {
    (void) [((GsonJsonWriter *) nil_chk(outArg)) nullValue];
    return;
  }
  (void) [((GsonJsonWriter *) nil_chk(outArg)) beginObject];
  (void) [outArg nameWithNSString:GsonTypeAdapters_27_YEAR];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_YEAR]];
  (void) [outArg nameWithNSString:GsonTypeAdapters_27_MONTH];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_MONTH]];
  (void) [outArg nameWithNSString:GsonTypeAdapters_27_DAY_OF_MONTH];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_DAY_OF_MONTH]];
  (void) [outArg nameWithNSString:GsonTypeAdapters_27_HOUR_OF_DAY];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_HOUR_OF_DAY]];
  (void) [outArg nameWithNSString:GsonTypeAdapters_27_MINUTE];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_MINUTE]];
  (void) [outArg nameWithNSString:GsonTypeAdapters_27_SECOND];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_SECOND]];
  (void) [outArg endObject];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCalendar;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "YEAR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "MONTH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "DAY_OF_MONTH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "HOUR_OF_DAY", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "MINUTE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "SECOND", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilCalendar;", &GsonTypeAdapters_27_YEAR, &GsonTypeAdapters_27_MONTH, &GsonTypeAdapters_27_DAY_OF_MONTH, &GsonTypeAdapters_27_HOUR_OF_DAY, &GsonTypeAdapters_27_MINUTE, &GsonTypeAdapters_27_SECOND, "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/Calendar;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_27 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 6, 11, -1, -1, 12, -1 };
  return &_GsonTypeAdapters_27;
}

@end


#line 609
void GsonTypeAdapters_27_init(GsonTypeAdapters_27 *self) {
  GsonTypeAdapter_init(self);
}


#line 609
GsonTypeAdapters_27 *new_GsonTypeAdapters_27_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_27, init)
}


#line 609
GsonTypeAdapters_27 *create_GsonTypeAdapters_27_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_27, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 677
@implementation GsonTypeAdapters_28

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 677
- (instancetype)init {
  GsonTypeAdapters_28_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 678
- (JavaUtilLocale *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  
#line 680
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  NSString *locale = [inArg nextString];
  JavaUtilStringTokenizer *tokenizer = new_JavaUtilStringTokenizer_initWithNSString_withNSString_(locale, @"_");
  NSString *language = nil;
  NSString *country = nil;
  NSString *variant = nil;
  if ([tokenizer hasMoreElements]) {
    language = [tokenizer nextToken];
  }
  if ([tokenizer hasMoreElements]) {
    country = [tokenizer nextToken];
  }
  if ([tokenizer hasMoreElements]) {
    variant = [tokenizer nextToken];
  }
  if (country == nil && variant == nil) {
    return new_JavaUtilLocale_initWithNSString_(language);
  }
  else
#line 700
  if (variant == nil) {
    return new_JavaUtilLocale_initWithNSString_withNSString_(language, country);
  }
  else {
    
#line 703
    return new_JavaUtilLocale_initWithNSString_withNSString_withNSString_(language, country, variant);
  }
}


#line 706
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilLocale *)value {
  
#line 708
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LJavaUtilLocale;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/Locale;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_28 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_28;
}

@end


#line 677
void GsonTypeAdapters_28_init(GsonTypeAdapters_28 *self) {
  GsonTypeAdapter_init(self);
}


#line 677
GsonTypeAdapters_28 *new_GsonTypeAdapters_28_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_28, init)
}


#line 677
GsonTypeAdapters_28 *create_GsonTypeAdapters_28_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_28, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 714
@implementation GsonTypeAdapters_29

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 714
- (instancetype)init {
  GsonTypeAdapters_29_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 715
- (GsonJsonElement *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  {
    
#line 720
    NSString *number;
    
#line 728
    GsonJsonArray *array;
    
#line 736
    GsonJsonObject *object;
    
#line 716
    switch ([[((GsonJsonReader *) nil_chk(inArg)) peek] ordinal]) {
      case GsonJsonToken_Enum_STRING:
      return new_GsonJsonPrimitive_initWithNSString_([inArg nextString]);
      case GsonJsonToken_Enum_NUMBER:
      number = [inArg nextString];
      return new_GsonJsonPrimitive_initWithNSNumber_(new_GsonLazilyParsedNumber_initWithNSString_(number));
      case GsonJsonToken_Enum_BOOLEAN:
      return new_GsonJsonPrimitive_initWithJavaLangBoolean_(JavaLangBoolean_valueOfWithBoolean_([inArg nextBoolean]));
      case GsonJsonToken_Enum_NULL:
      [inArg nextNull];
      return JreLoadStatic(GsonJsonNull, INSTANCE);
      case GsonJsonToken_Enum_BEGIN_ARRAY:
      array = new_GsonJsonArray_init();
      [inArg beginArray];
      while ([inArg hasNext]) {
        [array addWithGsonJsonElement:[self readWithGsonJsonReader:inArg]];
      }
      [inArg endArray];
      return array;
      case GsonJsonToken_Enum_BEGIN_OBJECT:
      object = new_GsonJsonObject_init();
      [inArg beginObject];
      while ([inArg hasNext]) {
        [object addWithNSString:[inArg nextName] withGsonJsonElement:[self readWithGsonJsonReader:inArg]];
      }
      [inArg endObject];
      return object;
      case GsonJsonToken_Enum_END_DOCUMENT:
      case GsonJsonToken_Enum_NAME:
      case GsonJsonToken_Enum_END_OBJECT:
      case GsonJsonToken_Enum_END_ARRAY:
      default:
      @throw new_JavaLangIllegalArgumentException_init();
    }
  }
}


#line 752
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(GsonJsonElement *)value {
  if (value == nil || [value isJsonNull]) {
    (void) [((GsonJsonWriter *) nil_chk(outArg)) nullValue];
  }
  else
#line 755
  if ([value isJsonPrimitive]) {
    GsonJsonPrimitive *primitive = [value getAsJsonPrimitive];
    if ([((GsonJsonPrimitive *) nil_chk(primitive)) isNumber]) {
      (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSNumber:[primitive getAsNumber]];
    }
    else
#line 759
    if ([primitive isBoolean]) {
      (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithBoolean:[primitive getAsBoolean]];
    }
    else {
      
#line 762
      (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:[primitive getAsString]];
    }
  }
  else if ([value isJsonArray]) {
    (void) [((GsonJsonWriter *) nil_chk(outArg)) beginArray];
    for (GsonJsonElement * __strong e in nil_chk([value getAsJsonArray])) {
      [self writeWithGsonJsonWriter:outArg withId:e];
    }
    (void) [outArg endArray];
  }
  else if ([value isJsonObject]) {
    (void) [((GsonJsonWriter *) nil_chk(outArg)) beginObject];
    for (id<JavaUtilMap_Entry> __strong e in nil_chk([((GsonJsonObject *) nil_chk([value getAsJsonObject])) entrySet])) {
      (void) [outArg nameWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]];
      [self writeWithGsonJsonWriter:outArg withId:[e getValue]];
    }
    (void) [outArg endObject];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Couldn't write ", [value java_getClass]));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonJsonElement;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGsonJsonReader;", "LJavaIoIOException;", "write", "LGsonJsonWriter;LGsonJsonElement;", "LGsonTypeAdapters;", "Lcom/google/gson/TypeAdapter<Lcom/google/gson/JsonElement;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_29 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GsonTypeAdapters_29;
}

@end


#line 714
void GsonTypeAdapters_29_init(GsonTypeAdapters_29 *self) {
  GsonTypeAdapter_init(self);
}


#line 714
GsonTypeAdapters_29 *new_GsonTypeAdapters_29_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_29, init)
}


#line 714
GsonTypeAdapters_29 *create_GsonTypeAdapters_29_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_29, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 789
@implementation GsonTypeAdapters_EnumTypeAdapter


#line 793
- (instancetype)initWithIOSClass:(IOSClass *)classOfT {
  GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(self, classOfT);
  return self;
}


#line 811
- (JavaLangEnum *)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  if ([((GsonJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GsonJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return [((id<JavaUtilMap>) nil_chk(nameToConstant_)) getWithId:[inArg nextString]];
}

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaLangEnum *)value {
  (void) [((GsonJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [((id<JavaUtilMap>) nil_chk(constantToName_)) getWithId:value]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangEnum;", 0x1, 2, 3, 4, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 4, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(readWithGsonJsonReader:);
  methods[2].selector = @selector(writeWithGsonJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nameToConstant_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "constantToName_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<TT;>;)V", "read", "LGsonJsonReader;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonReader;)TT;", "write", "LGsonJsonWriter;LJavaLangEnum;", "(Lcom/google/gson/stream/JsonWriter;TT;)V", "Ljava/util/Map<Ljava/lang/String;TT;>;", "Ljava/util/Map<TT;Ljava/lang/String;>;", "LGsonTypeAdapters;", "<T:Ljava/lang/Enum<TT;>;>Lcom/google/gson/TypeAdapter<TT;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_EnumTypeAdapter = { "EnumTypeAdapter", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x1a, 3, 2, 11, -1, -1, 12, -1 };
  return &_GsonTypeAdapters_EnumTypeAdapter;
}

@end


#line 793
void GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(GsonTypeAdapters_EnumTypeAdapter *self, IOSClass *classOfT) {
  GsonTypeAdapter_init(self);
  self->nameToConstant_ = new_JavaUtilHashMap_init();
  self->constantToName_ = new_JavaUtilHashMap_init();
  
#line 794
  @try {
    {
      IOSObjectArray *a__ =
#line 795
      [((IOSClass *) nil_chk(classOfT)) getEnumConstants];
      JavaLangEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangEnum * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangEnum *constant = *b__++;
        
#line 796
        NSString *name = [((JavaLangEnum *) nil_chk(constant)) name];
        id<GsonSerializedName> annotation = ((id<GsonSerializedName>) [((JavaLangReflectField *) nil_chk([classOfT getField:name])) getAnnotationWithIOSClass:GsonSerializedName_class_()]);
        if (annotation != nil) {
          name = [annotation value];
          {
            IOSObjectArray *a__ =
#line 800
            [annotation alternate];
            NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
            NSString * const *e__ = b__ + a__->size_;
            while (b__ < e__) {
              NSString *alternate = *b__++;
              
#line 801
              (void) [self->nameToConstant_ putWithId:alternate withId:constant];
            }
          }
        }
        
#line 804
        (void) [self->nameToConstant_ putWithId:name withId:constant];
        (void) [self->constantToName_ putWithId:constant withId:name];
      }
    }
  }
  @catch (
#line 807
  JavaLangNoSuchFieldException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}


#line 793
GsonTypeAdapters_EnumTypeAdapter *new_GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_EnumTypeAdapter, initWithIOSClass_, classOfT)
}


#line 793
GsonTypeAdapters_EnumTypeAdapter *create_GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_EnumTypeAdapter, initWithIOSClass_, classOfT)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonTypeAdapters_EnumTypeAdapter)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 824
@implementation GsonTypeAdapters_30

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 824
- (instancetype)init {
  GsonTypeAdapters_30_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 825
- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken {
  
#line 827
  IOSClass *rawType = [((GsonTypeToken *) nil_chk(typeToken)) getRawType];
  if (![JavaLangEnum_class_() isAssignableFrom:rawType] || rawType == JavaLangEnum_class_()) {
    return nil;
  }
  if (![((IOSClass *) nil_chk(rawType)) isEnum]) {
    rawType = [rawType getSuperclass];
  }
  return new_GsonTypeAdapters_EnumTypeAdapter_initWithIOSClass_(rawType);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWithGsonGson:withGsonTypeToken:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "LGsonGson;LGsonTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "LGsonTypeAdapters;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_30 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, -1, -1 };
  return &_GsonTypeAdapters_30;
}

@end


#line 824
void GsonTypeAdapters_30_init(GsonTypeAdapters_30 *self) {
  NSObject_init(self);
}


#line 824
GsonTypeAdapters_30 *new_GsonTypeAdapters_30_init() {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_30, init)
}


#line 824
GsonTypeAdapters_30 *create_GsonTypeAdapters_30_init() {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_30, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 840
@implementation GsonTypeAdapters_31


#line 840
- (instancetype)initWithGsonTypeToken:(GsonTypeToken *)capture$0
                  withGsonTypeAdapter:(GsonTypeAdapter *)capture$1 {
  GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(self, capture$0, capture$1);
  return self;
}


#line 841
- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken {
  
#line 843
  return [((GsonTypeToken *) nil_chk(typeToken)) isEqual:val$type_] ? val$typeAdapter_ : nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonTypeToken:withGsonTypeAdapter:);
  methods[1].selector = @selector(createWithGsonGson:withGsonTypeToken:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$type_", "LGsonTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$typeAdapter_", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "create", "LGsonGson;LGsonTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "Lcom/google/gson/reflect/TypeToken<TTT;>;", "Lcom/google/gson/TypeAdapter<TTT;>;", "LGsonTypeAdapters;", "newFactoryWithGsonTypeToken:withGsonTypeAdapter:" };
  static const J2ObjcClassInfo _GsonTypeAdapters_31 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 2, 2, 5, -1, 6, -1, -1 };
  return &_GsonTypeAdapters_31;
}

@end


#line 840
void GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(GsonTypeAdapters_31 *self, GsonTypeToken *capture$0, GsonTypeAdapter *capture$1) {
  self->val$type_ = capture$0;
  self->val$typeAdapter_ = capture$1;
  NSObject_init(self);
}


#line 840
GsonTypeAdapters_31 *new_GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(GsonTypeToken *capture$0, GsonTypeAdapter *capture$1) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_31, initWithGsonTypeToken_withGsonTypeAdapter_, capture$0, capture$1)
}


#line 840
GsonTypeAdapters_31 *create_GsonTypeAdapters_31_initWithGsonTypeToken_withGsonTypeAdapter_(GsonTypeToken *capture$0, GsonTypeAdapter *capture$1) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_31, initWithGsonTypeToken_withGsonTypeAdapter_, capture$0, capture$1)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 850
@implementation GsonTypeAdapters_32


#line 850
- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$1 {
  GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(self, capture$0, capture$1);
  return self;
}


#line 851
- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken {
  
#line 853
  return [((GsonTypeToken *) nil_chk(typeToken)) getRawType] == val$type_ ? val$typeAdapter_ : nil;
}


#line 855
- (NSString *)description {
  return JreStrcat("$$$@C", @"Factory[type=", [((IOSClass *) nil_chk(val$type_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withGsonTypeAdapter:);
  methods[1].selector = @selector(createWithGsonGson:withGsonTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$type_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$typeAdapter_", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "create", "LGsonGson;LGsonTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "toString", "Ljava/lang/Class<TTT;>;", "Lcom/google/gson/TypeAdapter<TTT;>;", "LGsonTypeAdapters;", "newFactoryWithIOSClass:withGsonTypeAdapter:" };
  static const J2ObjcClassInfo _GsonTypeAdapters_32 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 2, 6, -1, 7, -1, -1 };
  return &_GsonTypeAdapters_32;
}

@end


#line 850
void GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_32 *self, IOSClass *capture$0, GsonTypeAdapter *capture$1) {
  self->val$type_ = capture$0;
  self->val$typeAdapter_ = capture$1;
  NSObject_init(self);
}


#line 850
GsonTypeAdapters_32 *new_GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_32, initWithIOSClass_withGsonTypeAdapter_, capture$0, capture$1)
}


#line 850
GsonTypeAdapters_32 *create_GsonTypeAdapters_32_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_32, initWithIOSClass_withGsonTypeAdapter_, capture$0, capture$1)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 863
@implementation GsonTypeAdapters_33


#line 863
- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$2 {
  GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(self, capture$0, capture$1, capture$2);
  return self;
}


#line 864
- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken {
  
#line 866
  IOSClass *rawType = [((GsonTypeToken *) nil_chk(typeToken)) getRawType];
  return (rawType == val$unboxed_ || rawType == val$boxed_) ? val$typeAdapter_ : nil;
}


#line 869
- (NSString *)description {
  return JreStrcat("$$C$$@C", @"Factory[type=", [((IOSClass *) nil_chk(val$boxed_)) getName], '+',
#line 871
  [((IOSClass *) nil_chk(val$unboxed_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withIOSClass:withGsonTypeAdapter:);
  methods[1].selector = @selector(createWithGsonGson:withGsonTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$unboxed_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$boxed_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$typeAdapter_", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "create", "LGsonGson;LGsonTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "toString", "Ljava/lang/Class<TTT;>;", "Lcom/google/gson/TypeAdapter<-TTT;>;", "LGsonTypeAdapters;", "newFactoryWithIOSClass:withIOSClass:withGsonTypeAdapter:" };
  static const J2ObjcClassInfo _GsonTypeAdapters_33 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 3, 6, -1, 7, -1, -1 };
  return &_GsonTypeAdapters_33;
}

@end


#line 863
void GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_33 *self, IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) {
  self->val$unboxed_ = capture$0;
  self->val$boxed_ = capture$1;
  self->val$typeAdapter_ = capture$2;
  NSObject_init(self);
}


#line 863
GsonTypeAdapters_33 *new_GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_33, initWithIOSClass_withIOSClass_withGsonTypeAdapter_, capture$0, capture$1, capture$2)
}


#line 863
GsonTypeAdapters_33 *create_GsonTypeAdapters_33_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_33, initWithIOSClass_withIOSClass_withGsonTypeAdapter_, capture$0, capture$1, capture$2)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 878
@implementation GsonTypeAdapters_34


#line 878
- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$2 {
  GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(self, capture$0, capture$1, capture$2);
  return self;
}


#line 879
- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken {
  
#line 881
  IOSClass *rawType = [((GsonTypeToken *) nil_chk(typeToken)) getRawType];
  return (rawType == val$base_ || rawType == val$sub_) ? val$typeAdapter_ : nil;
}


#line 884
- (NSString *)description {
  return JreStrcat("$$C$$@C", @"Factory[type=", [((IOSClass *) nil_chk(val$base_)) getName], '+',
#line 886
  [((IOSClass *) nil_chk(val$sub_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withIOSClass:withGsonTypeAdapter:);
  methods[1].selector = @selector(createWithGsonGson:withGsonTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$base_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$sub_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$typeAdapter_", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "create", "LGsonGson;LGsonTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "toString", "Ljava/lang/Class<TTT;>;", "Ljava/lang/Class<+TTT;>;", "Lcom/google/gson/TypeAdapter<-TTT;>;", "LGsonTypeAdapters;", "newFactoryForMultipleTypesWithIOSClass:withIOSClass:withGsonTypeAdapter:" };
  static const J2ObjcClassInfo _GsonTypeAdapters_34 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 3, 7, -1, 8, -1, -1 };
  return &_GsonTypeAdapters_34;
}

@end


#line 878
void GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_34 *self, IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) {
  self->val$base_ = capture$0;
  self->val$sub_ = capture$1;
  self->val$typeAdapter_ = capture$2;
  NSObject_init(self);
}


#line 878
GsonTypeAdapters_34 *new_GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_34, initWithIOSClass_withIOSClass_withGsonTypeAdapter_, capture$0, capture$1, capture$2)
}


#line 878
GsonTypeAdapters_34 *create_GsonTypeAdapters_34_initWithIOSClass_withIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GsonTypeAdapter *capture$2) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_34, initWithIOSClass_withIOSClass_withGsonTypeAdapter_, capture$0, capture$1, capture$2)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 897
@implementation GsonTypeAdapters_35


#line 897
- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGsonTypeAdapter:(GsonTypeAdapter *)capture$1 {
  GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(self, capture$0, capture$1);
  return self;
}


#line 898
- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)typeToken {
  
#line 900
  IOSClass *requestedType = [((GsonTypeToken *) nil_chk(typeToken)) getRawType];
  if (![((IOSClass *) nil_chk(val$clazz_)) isAssignableFrom:requestedType]) {
    return nil;
  }
  return new_GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(self, requestedType);
}


#line 919
- (NSString *)description {
  return JreStrcat("$$$@C", @"Factory[typeHierarchy=", [((IOSClass *) nil_chk(val$clazz_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withGsonTypeAdapter:);
  methods[1].selector = @selector(createWithGsonGson:withGsonTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$clazz_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$typeAdapter_", "LGsonTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "create", "LGsonGson;LGsonTypeToken;", "<T2:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT2;>;)Lcom/google/gson/TypeAdapter<TT2;>;", "toString", "Ljava/lang/Class<TT1;>;", "Lcom/google/gson/TypeAdapter<TT1;>;", "LGsonTypeAdapters;", "newTypeHierarchyFactoryWithIOSClass:withGsonTypeAdapter:" };
  static const J2ObjcClassInfo _GsonTypeAdapters_35 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 2, 6, -1, 7, -1, -1 };
  return &_GsonTypeAdapters_35;
}

@end


#line 897
void GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(GsonTypeAdapters_35 *self, IOSClass *capture$0, GsonTypeAdapter *capture$1) {
  self->val$clazz_ = capture$0;
  self->val$typeAdapter_ = capture$1;
  NSObject_init(self);
}


#line 897
GsonTypeAdapters_35 *new_GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_35, initWithIOSClass_withGsonTypeAdapter_, capture$0, capture$1)
}


#line 897
GsonTypeAdapters_35 *create_GsonTypeAdapters_35_initWithIOSClass_withGsonTypeAdapter_(IOSClass *capture$0, GsonTypeAdapter *capture$1) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_35, initWithIOSClass_withGsonTypeAdapter_, capture$0, capture$1)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java"


#line 904
@implementation GsonTypeAdapters_35_1


#line 904
- (instancetype)initWithGsonTypeAdapters_35:(GsonTypeAdapters_35 *)outer$
                               withIOSClass:(IOSClass *)capture$0 {
  GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(self, outer$, capture$0);
  return self;
}


#line 905
- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(id)value {
  [((GsonTypeAdapter *) nil_chk(this$0_->val$typeAdapter_)) writeWithGsonJsonWriter:outArg withId:value];
}


#line 909
- (id)readWithGsonJsonReader:(GsonJsonReader *)inArg {
  id result = [((GsonTypeAdapter *) nil_chk(this$0_->val$typeAdapter_)) readWithGsonJsonReader:inArg];
  if (result != nil && ![((IOSClass *) nil_chk(val$requestedType_)) isInstance:result]) {
    @throw new_GsonJsonSyntaxException_initWithNSString_(JreStrcat("$$$$", @"Expected a ", [((IOSClass *) nil_chk(val$requestedType_)) getName], @" but was ",
#line 913
    [[result java_getClass] getName]));
  }
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, 2, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonTypeAdapters_35:withIOSClass:);
  methods[1].selector = @selector(writeWithGsonJsonWriter:withId:);
  methods[2].selector = @selector(readWithGsonJsonReader:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGsonTypeAdapters_35;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$requestedType_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "write", "LGsonJsonWriter;LNSObject;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonWriter;TT1;)V", "read", "LGsonJsonReader;", "(Lcom/google/gson/stream/JsonReader;)TT1;", "Ljava/lang/Class<-TT2;>;", "LGsonTypeAdapters_35;", "createWithGsonGson:withGsonTypeToken:", "Lcom/google/gson/TypeAdapter<TT1;>;" };
  static const J2ObjcClassInfo _GsonTypeAdapters_35_1 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 2, 8, -1, 9, 10, -1 };
  return &_GsonTypeAdapters_35_1;
}

@end


#line 904
void GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(GsonTypeAdapters_35_1 *self, GsonTypeAdapters_35 *outer$, IOSClass *capture$0) {
  self->this$0_ = outer$;
  self->val$requestedType_ = capture$0;
  GsonTypeAdapter_init(self);
}


#line 904
GsonTypeAdapters_35_1 *new_GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(GsonTypeAdapters_35 *outer$, IOSClass *capture$0) {
  J2OBJC_NEW_IMPL(GsonTypeAdapters_35_1, initWithGsonTypeAdapters_35_withIOSClass_, outer$, capture$0)
}


#line 904
GsonTypeAdapters_35_1 *create_GsonTypeAdapters_35_1_initWithGsonTypeAdapters_35_withIOSClass_(GsonTypeAdapters_35 *outer$, IOSClass *capture$0) {
  J2OBJC_CREATE_IMPL(GsonTypeAdapters_35_1, initWithGsonTypeAdapters_35_withIOSClass_, outer$, capture$0)
}
