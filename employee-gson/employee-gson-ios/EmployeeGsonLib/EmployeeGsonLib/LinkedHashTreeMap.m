//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "LinkedHashTreeMap.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/util/AbstractMap.h"
#include "java/util/AbstractSet.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/function/Consumer.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface GsonLinkedHashTreeMap () {
 @public
  GsonLinkedHashTreeMap_EntrySet *entrySet_;
  GsonLinkedHashTreeMap_KeySet *keySet_LinkedHashTreeMap_;
}

- (jboolean)equalWithId:(id)a
                 withId:(id)b;

/*!
 @brief Applies a supplemental hash function to a given hashCode, which defends
  against poor quality hash functions.This is critical because HashMap
  uses power-of-two length hash tables, that otherwise encounter collisions
  for hashCodes that do not differ in lower or upper bits.
 */
+ (jint)secondaryHashWithInt:(jint)h;

- (void)replaceInParentWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)node
                       withGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)replacement;

/*!
 @brief Rebalances the tree by making any AVL rotations necessary between the
  newly-unbalanced node and the tree's root.
 @param insert true if the node was unbalanced by an insert; false if it      was by a removal.
 */
- (void)rebalanceWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)unbalanced
                                    withBoolean:(jboolean)insert;

/*!
 @brief Rotates the subtree so that its root's right child is the new root.
 */
- (void)rotateLeftWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)root;

/*!
 @brief Rotates the subtree so that its root's left child is the new root.
 */
- (void)rotateRightWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)root;

- (void)doubleCapacity;

/*!
 @brief If somebody is unlucky enough to have to serialize one of these, serialize
  it as a LinkedHashMap so that they won't need Gson on the other side to
  deserialize it.Using serialization defeats our DoS defence, so most apps
  shouldn't use it.
 */
- (id)writeReplace;

@end

J2OBJC_FIELD_SETTER(GsonLinkedHashTreeMap, entrySet_, GsonLinkedHashTreeMap_EntrySet *)
J2OBJC_FIELD_SETTER(GsonLinkedHashTreeMap, keySet_LinkedHashTreeMap_, GsonLinkedHashTreeMap_KeySet *)

inline id<JavaUtilComparator> GsonLinkedHashTreeMap_get_NATURAL_ORDER(void);
static id<JavaUtilComparator> GsonLinkedHashTreeMap_NATURAL_ORDER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonLinkedHashTreeMap, NATURAL_ORDER, id<JavaUtilComparator>)

__attribute__((unused)) static jboolean GsonLinkedHashTreeMap_equalWithId_withId_(GsonLinkedHashTreeMap *self, id a, id b);

__attribute__((unused)) static jint GsonLinkedHashTreeMap_secondaryHashWithInt_(jint h);

__attribute__((unused)) static void GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *node, GsonLinkedHashTreeMap_Node *replacement);

__attribute__((unused)) static void GsonLinkedHashTreeMap_rebalanceWithGsonLinkedHashTreeMap_Node_withBoolean_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *unbalanced, jboolean insert);

__attribute__((unused)) static void GsonLinkedHashTreeMap_rotateLeftWithGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *root);

__attribute__((unused)) static void GsonLinkedHashTreeMap_rotateRightWithGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *root);

__attribute__((unused)) static void GsonLinkedHashTreeMap_doubleCapacity(GsonLinkedHashTreeMap *self);

__attribute__((unused)) static id GsonLinkedHashTreeMap_writeReplace(GsonLinkedHashTreeMap *self);

@interface GsonLinkedHashTreeMap_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(id<JavaLangComparable>)a
               withId:(id<JavaLangComparable>)b;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedHashTreeMap_1)

__attribute__((unused)) static void GsonLinkedHashTreeMap_1_init(GsonLinkedHashTreeMap_1 *self);

__attribute__((unused)) static GsonLinkedHashTreeMap_1 *new_GsonLinkedHashTreeMap_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonLinkedHashTreeMap_1 *create_GsonLinkedHashTreeMap_1_init(void);

@interface GsonLinkedHashTreeMap_AvlIterator () {
 @public
  /*!
   @brief This stack is a singly linked list, linked by the 'parent' field.
   */
  GsonLinkedHashTreeMap_Node *stackTop_;
}

@end

J2OBJC_FIELD_SETTER(GsonLinkedHashTreeMap_AvlIterator, stackTop_, GsonLinkedHashTreeMap_Node *)

@interface GsonLinkedHashTreeMap_AvlBuilder () {
 @public
  /*!
   @brief This stack is a singly linked list, linked by the 'parent' field.
   */
  GsonLinkedHashTreeMap_Node *stack_;
  jint leavesToSkip_;
  jint leavesSkipped_;
  jint size_;
}

@end

J2OBJC_FIELD_SETTER(GsonLinkedHashTreeMap_AvlBuilder, stack_, GsonLinkedHashTreeMap_Node *)

@interface GsonLinkedHashTreeMap_LinkedTreeMapIterator : NSObject < JavaUtilIterator > {
 @public
  GsonLinkedHashTreeMap *this$0_;
  GsonLinkedHashTreeMap_Node *next_;
  GsonLinkedHashTreeMap_Node *lastReturned_;
  jint expectedModCount_;
}

- (instancetype)initWithGsonLinkedHashTreeMap:(GsonLinkedHashTreeMap *)outer$;

- (jboolean)hasNext;

- (GsonLinkedHashTreeMap_Node *)nextNode;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedHashTreeMap_LinkedTreeMapIterator)

J2OBJC_FIELD_SETTER(GsonLinkedHashTreeMap_LinkedTreeMapIterator, next_, GsonLinkedHashTreeMap_Node *)
J2OBJC_FIELD_SETTER(GsonLinkedHashTreeMap_LinkedTreeMapIterator, lastReturned_, GsonLinkedHashTreeMap_Node *)

__attribute__((unused)) static void GsonLinkedHashTreeMap_LinkedTreeMapIterator_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap_LinkedTreeMapIterator *self, GsonLinkedHashTreeMap *outer$);

__attribute__((unused)) static GsonLinkedHashTreeMap_Node *GsonLinkedHashTreeMap_LinkedTreeMapIterator_nextNode(GsonLinkedHashTreeMap_LinkedTreeMapIterator *self);

J2OBJC_TYPE_LITERAL_HEADER(GsonLinkedHashTreeMap_LinkedTreeMapIterator)

@interface GsonLinkedHashTreeMap_EntrySet () {
 @public
  GsonLinkedHashTreeMap *this$0_;
}

@end

@interface GsonLinkedHashTreeMap_EntrySet_1 : GsonLinkedHashTreeMap_LinkedTreeMapIterator

- (instancetype)initWithGsonLinkedHashTreeMap_EntrySet:(GsonLinkedHashTreeMap_EntrySet *)outer$;

- (id<JavaUtilMap_Entry>)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedHashTreeMap_EntrySet_1)

__attribute__((unused)) static void GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(GsonLinkedHashTreeMap_EntrySet_1 *self, GsonLinkedHashTreeMap_EntrySet *outer$);

__attribute__((unused)) static GsonLinkedHashTreeMap_EntrySet_1 *new_GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(GsonLinkedHashTreeMap_EntrySet *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonLinkedHashTreeMap_EntrySet_1 *create_GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(GsonLinkedHashTreeMap_EntrySet *outer$);

@interface GsonLinkedHashTreeMap_KeySet () {
 @public
  GsonLinkedHashTreeMap *this$0_;
}

@end

@interface GsonLinkedHashTreeMap_KeySet_1 : GsonLinkedHashTreeMap_LinkedTreeMapIterator

- (instancetype)initWithGsonLinkedHashTreeMap_KeySet:(GsonLinkedHashTreeMap_KeySet *)outer$;

- (id)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonLinkedHashTreeMap_KeySet_1)

__attribute__((unused)) static void GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(GsonLinkedHashTreeMap_KeySet_1 *self, GsonLinkedHashTreeMap_KeySet *outer$);

__attribute__((unused)) static GsonLinkedHashTreeMap_KeySet_1 *new_GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(GsonLinkedHashTreeMap_KeySet *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonLinkedHashTreeMap_KeySet_1 *create_GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(GsonLinkedHashTreeMap_KeySet *outer$);

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"

J2OBJC_INITIALIZED_DEFN(GsonLinkedHashTreeMap)


#line 40
@implementation GsonLinkedHashTreeMap

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 59
- (instancetype)init {
  GsonLinkedHashTreeMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 71
- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  GsonLinkedHashTreeMap_initWithJavaUtilComparator_(self, comparator);
  return self;
}


#line 81
- (jint)size {
  return size_;
}

- (id)getWithId:(id)key {
  GsonLinkedHashTreeMap_Node *node = [self findByObjectWithId:key];
  return node != nil ? node->value_ : nil;
}

- (jboolean)containsKeyWithId:(id)key {
  return [self findByObjectWithId:key] != nil;
}

- (id)putWithId:(id)key
         withId:(id)value {
  if (key == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"key == null");
  }
  GsonLinkedHashTreeMap_Node *created = [self findWithId:key withBoolean:true];
  id result = ((GsonLinkedHashTreeMap_Node *) nil_chk(created))->value_;
  created->value_ = value;
  return result;
}


#line 104
- (void)clear {
  JavaUtilArrays_fillWithNSObjectArray_withId_(table_, nil);
  size_ = 0;
  modCount_++;
  
#line 110
  GsonLinkedHashTreeMap_Node *header = self->header_;
  for (GsonLinkedHashTreeMap_Node *e = ((GsonLinkedHashTreeMap_Node *) nil_chk(header))->next_; e != header; ) {
    GsonLinkedHashTreeMap_Node *next = ((GsonLinkedHashTreeMap_Node *) nil_chk(e))->next_;
    e->next_ = e->prev_ = nil;
    e = next;
  }
  
#line 117
  header->next_ = header->prev_ = header;
}


#line 120
- (id)removeWithId:(id)key {
  GsonLinkedHashTreeMap_Node *node = [self removeInternalByKeyWithId:key];
  return node != nil ? node->value_ : nil;
}


#line 131
- (GsonLinkedHashTreeMap_Node *)findWithId:(id)key
                               withBoolean:(jboolean)create {
  id<JavaUtilComparator> comparator = self->comparator_;
  IOSObjectArray *table = self->table_;
  jint hash_ = GsonLinkedHashTreeMap_secondaryHashWithInt_(((jint) [nil_chk(key) hash]));
  jint index = hash_ & (((IOSObjectArray *) nil_chk(table))->size_ - 1);
  GsonLinkedHashTreeMap_Node *nearest = IOSObjectArray_Get(table, index);
  jint comparison = 0;
  
#line 139
  if (nearest != nil) {
    
#line 141
    id<JavaLangComparable> comparableKey =
#line 142
    (comparator == GsonLinkedHashTreeMap_NATURAL_ORDER) ?
#line 143
    (id<JavaLangComparable>) cast_check(key, JavaLangComparable_class_()) :
#line 144
    nil;
    
#line 146
    while (true) {
      comparison = (comparableKey != nil) ?
#line 148
      [comparableKey compareToWithId:nearest->key_] :
#line 149
      [((id<JavaUtilComparator>) nil_chk(comparator)) compareWithId:key withId:nearest->key_];
      
#line 152
      if (comparison == 0) {
        return nearest;
      }
      
#line 157
      GsonLinkedHashTreeMap_Node *child = (comparison < 0) ? nearest->left_ : nearest->right_;
      if (child == nil) {
        break;
      }
      
#line 162
      nearest = child;
    }
  }
  
#line 167
  if (!create) {
    return nil;
  }
  
#line 172
  GsonLinkedHashTreeMap_Node *header = self->header_;
  GsonLinkedHashTreeMap_Node *created;
  if (nearest == nil) {
    
#line 176
    if (comparator == GsonLinkedHashTreeMap_NATURAL_ORDER && !([JavaLangComparable_class_() isInstance:key])) {
      @throw new_JavaLangClassCastException_initWithNSString_(JreStrcat("$$", [[key java_getClass] getName], @" is not Comparable"));
    }
    created = new_GsonLinkedHashTreeMap_Node_initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(nearest, key, hash_, header, ((GsonLinkedHashTreeMap_Node *) nil_chk(header))->prev_);
    (void) IOSObjectArray_Set(table, index, created);
  }
  else {
    
#line 182
    created = new_GsonLinkedHashTreeMap_Node_initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(nearest, key, hash_, header, ((GsonLinkedHashTreeMap_Node *) nil_chk(header))->prev_);
    if (comparison < 0) {
      nearest->left_ = created;
    }
    else {
      
#line 186
      nearest->right_ = created;
    }
    GsonLinkedHashTreeMap_rebalanceWithGsonLinkedHashTreeMap_Node_withBoolean_(self, nearest, true);
  }
  
#line 191
  if (size_++ > threshold_) {
    GsonLinkedHashTreeMap_doubleCapacity(self);
  }
  modCount_++;
  
#line 196
  return created;
}


#line 199
- (GsonLinkedHashTreeMap_Node *)findByObjectWithId:(id)key {
  
#line 201
  @try {
    return key != nil ? [self findWithId:key withBoolean:false] : nil;
  }
  @catch (
#line 203
  JavaLangClassCastException *e) {
    return nil;
  }
}


#line 217
- (GsonLinkedHashTreeMap_Node *)findByEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_ {
  GsonLinkedHashTreeMap_Node *mine = [self findByObjectWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]];
  jboolean valuesEqual = mine != nil && GsonLinkedHashTreeMap_equalWithId_withId_(self, mine->value_, [entry_ getValue]);
  return valuesEqual ? mine : nil;
}

- (jboolean)equalWithId:(id)a
                 withId:(id)b {
  return GsonLinkedHashTreeMap_equalWithId_withId_(self, a, b);
}


#line 233
+ (jint)secondaryHashWithInt:(jint)h {
  return GsonLinkedHashTreeMap_secondaryHashWithInt_(h);
}


#line 245
- (void)removeInternalWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)node
                                         withBoolean:(jboolean)unlink {
  if (unlink) {
    ((GsonLinkedHashTreeMap_Node *) nil_chk(((GsonLinkedHashTreeMap_Node *) nil_chk(node))->prev_))->next_ = node->next_;
    ((GsonLinkedHashTreeMap_Node *) nil_chk(node->next_))->prev_ = node->prev_;
    node->next_ = node->prev_ = nil;
  }
  
#line 252
  GsonLinkedHashTreeMap_Node *left = ((GsonLinkedHashTreeMap_Node *) nil_chk(node))->left_;
  GsonLinkedHashTreeMap_Node *right = node->right_;
  GsonLinkedHashTreeMap_Node *originalParent = node->parent_;
  if (left != nil && right != nil) {
    
#line 266
    GsonLinkedHashTreeMap_Node *adjacent = (left->height_ > right->height_) ? [left last] : [right first];
    [self removeInternalWithGsonLinkedHashTreeMap_Node:adjacent withBoolean:false];
    
#line 269
    jint leftHeight = 0;
    left = node->left_;
    if (left != nil) {
      leftHeight = left->height_;
      adjacent->left_ = left;
      left->parent_ = adjacent;
      node->left_ = nil;
    }
    jint rightHeight = 0;
    right = node->right_;
    if (right != nil) {
      rightHeight = right->height_;
      adjacent->right_ = right;
      right->parent_ = adjacent;
      node->right_ = nil;
    }
    adjacent->height_ = JavaLangMath_maxWithInt_withInt_(leftHeight, rightHeight) + 1;
    GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, node, adjacent);
    return;
  }
  else
#line 288
  if (left != nil) {
    GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, node, left);
    node->left_ = nil;
  }
  else
#line 291
  if (right != nil) {
    GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, node, right);
    node->right_ = nil;
  }
  else {
    
#line 295
    GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, node, nil);
  }
  
#line 298
  GsonLinkedHashTreeMap_rebalanceWithGsonLinkedHashTreeMap_Node_withBoolean_(self, originalParent, false);
  size_--;
  modCount_++;
}


#line 303
- (GsonLinkedHashTreeMap_Node *)removeInternalByKeyWithId:(id)key {
  GsonLinkedHashTreeMap_Node *node = [self findByObjectWithId:key];
  if (node != nil) {
    [self removeInternalWithGsonLinkedHashTreeMap_Node:node withBoolean:true];
  }
  return node;
}

- (void)replaceInParentWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)node
                       withGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)replacement {
  GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, node, replacement);
}


#line 338
- (void)rebalanceWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)unbalanced
                                    withBoolean:(jboolean)insert {
  GsonLinkedHashTreeMap_rebalanceWithGsonLinkedHashTreeMap_Node_withBoolean_(self, unbalanced, insert);
}


#line 401
- (void)rotateLeftWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)root {
  GsonLinkedHashTreeMap_rotateLeftWithGsonLinkedHashTreeMap_Node_(self, root);
}


#line 429
- (void)rotateRightWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)root {
  GsonLinkedHashTreeMap_rotateRightWithGsonLinkedHashTreeMap_Node_(self, root);
}


#line 457
- (id<JavaUtilSet>)entrySet {
  GsonLinkedHashTreeMap_EntrySet *result = entrySet_;
  return result != nil ? result : (entrySet_ = new_GsonLinkedHashTreeMap_EntrySet_initWithGsonLinkedHashTreeMap_(self));
}

- (id<JavaUtilSet>)keySet {
  GsonLinkedHashTreeMap_KeySet *result = keySet_LinkedHashTreeMap_;
  return result != nil ? result : (keySet_LinkedHashTreeMap_ = new_GsonLinkedHashTreeMap_KeySet_initWithGsonLinkedHashTreeMap_(self));
}


#line 557
- (void)doubleCapacity {
  GsonLinkedHashTreeMap_doubleCapacity(self);
}


#line 566
+ (IOSObjectArray *)doubleCapacityWithGsonLinkedHashTreeMap_NodeArray:(IOSObjectArray *)oldTable {
  return GsonLinkedHashTreeMap_doubleCapacityWithGsonLinkedHashTreeMap_NodeArray_(oldTable);
}


#line 861
- (id)writeReplace {
  return GsonLinkedHashTreeMap_writeReplace(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 3, -1, 4, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x0, 10, 11, -1, 12, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x0, 13, 3, -1, 14, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x0, 15, 16, -1, 17, -1, -1 },
    { NULL, "Z", 0x2, 18, 7, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 21, 22, -1, 23, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x0, 24, 3, -1, 14, -1, -1 },
    { NULL, "V", 0x2, 25, 26, -1, 27, -1, -1 },
    { NULL, "V", 0x2, 28, 22, -1, 23, -1, -1 },
    { NULL, "V", 0x2, 29, 30, -1, 31, -1, -1 },
    { NULL, "V", 0x2, 32, 30, -1, 31, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 33, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 34, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LGsonLinkedHashTreeMap_Node;", 0x8, 35, 36, -1, 37, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, 38, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilComparator:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(getWithId:);
  methods[4].selector = @selector(containsKeyWithId:);
  methods[5].selector = @selector(putWithId:withId:);
  methods[6].selector = @selector(clear);
  methods[7].selector = @selector(removeWithId:);
  methods[8].selector = @selector(findWithId:withBoolean:);
  methods[9].selector = @selector(findByObjectWithId:);
  methods[10].selector = @selector(findByEntryWithJavaUtilMap_Entry:);
  methods[11].selector = @selector(equalWithId:withId:);
  methods[12].selector = @selector(secondaryHashWithInt:);
  methods[13].selector = @selector(removeInternalWithGsonLinkedHashTreeMap_Node:withBoolean:);
  methods[14].selector = @selector(removeInternalByKeyWithId:);
  methods[15].selector = @selector(replaceInParentWithGsonLinkedHashTreeMap_Node:withGsonLinkedHashTreeMap_Node:);
  methods[16].selector = @selector(rebalanceWithGsonLinkedHashTreeMap_Node:withBoolean:);
  methods[17].selector = @selector(rotateLeftWithGsonLinkedHashTreeMap_Node:);
  methods[18].selector = @selector(rotateRightWithGsonLinkedHashTreeMap_Node:);
  methods[19].selector = @selector(entrySet);
  methods[20].selector = @selector(keySet);
  methods[21].selector = @selector(doubleCapacity);
  methods[22].selector = @selector(doubleCapacityWithGsonLinkedHashTreeMap_NodeArray:);
  methods[23].selector = @selector(writeReplace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NATURAL_ORDER", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 39, 40, -1 },
    { "comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x0, -1, -1, 41, -1 },
    { "table_", "[LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 42, -1 },
    { "header_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x10, -1, -1, 43, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "modCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "threshold_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "entrySet_", "LGsonLinkedHashTreeMap_EntrySet;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "keySet_LinkedHashTreeMap_", "LGsonLinkedHashTreeMap_KeySet;", .constantValue.asLong = 0, 0x2, 44, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilComparator;", "(Ljava/util/Comparator<-TK;>;)V", "get", "LNSObject;", "(Ljava/lang/Object;)TV;", "containsKey", "put", "LNSObject;LNSObject;", "(TK;TV;)TV;", "remove", "find", "LNSObject;Z", "(TK;Z)Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "findByObject", "(Ljava/lang/Object;)Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "findByEntry", "LJavaUtilMap_Entry;", "(Ljava/util/Map$Entry<**>;)Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "equal", "secondaryHash", "I", "removeInternal", "LGsonLinkedHashTreeMap_Node;Z", "(Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;Z)V", "removeInternalByKey", "replaceInParent", "LGsonLinkedHashTreeMap_Node;LGsonLinkedHashTreeMap_Node;", "(Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;)V", "rebalance", "rotateLeft", "LGsonLinkedHashTreeMap_Node;", "(Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;)V", "rotateRight", "()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;", "()Ljava/util/Set<TK;>;", "doubleCapacity", "[LGsonLinkedHashTreeMap_Node;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>([Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;)[Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "LJavaIoObjectStreamException;", &GsonLinkedHashTreeMap_NATURAL_ORDER, "Ljava/util/Comparator<Ljava/lang/Comparable;>;", "Ljava/util/Comparator<-TK;>;", "[Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "keySet", "LGsonLinkedHashTreeMap_Node;LGsonLinkedHashTreeMap_AvlIterator;LGsonLinkedHashTreeMap_AvlBuilder;LGsonLinkedHashTreeMap_LinkedTreeMapIterator;LGsonLinkedHashTreeMap_EntrySet;LGsonLinkedHashTreeMap_KeySet;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractMap<TK;TV;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap = { "LinkedHashTreeMap", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x11, 24, 9, -1, 45, -1, 46, -1 };
  return &_GsonLinkedHashTreeMap;
}

+ (void)initialize {
  if (self == [GsonLinkedHashTreeMap class]) {
    GsonLinkedHashTreeMap_NATURAL_ORDER = new_GsonLinkedHashTreeMap_1_init();
    J2OBJC_SET_INITIALIZED(GsonLinkedHashTreeMap)
  }
}

@end


#line 59
void GsonLinkedHashTreeMap_init(GsonLinkedHashTreeMap *self) {
  GsonLinkedHashTreeMap_initWithJavaUtilComparator_(self, GsonLinkedHashTreeMap_NATURAL_ORDER);
}


#line 59
GsonLinkedHashTreeMap *new_GsonLinkedHashTreeMap_init() {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap, init)
}


#line 59
GsonLinkedHashTreeMap *create_GsonLinkedHashTreeMap_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap, init)
}


#line 71
void GsonLinkedHashTreeMap_initWithJavaUtilComparator_(GsonLinkedHashTreeMap *self, id<JavaUtilComparator> comparator) {
  JavaUtilAbstractMap_init(self);
  self->size_ =
#line 51
  0;
  self->modCount_ = 0;
  
#line 73
  self->comparator_ = comparator != nil ?
#line 74
  comparator : GsonLinkedHashTreeMap_NATURAL_ORDER;
  
#line 76
  self->header_ = new_GsonLinkedHashTreeMap_Node_init();
  self->table_ = [IOSObjectArray newArrayWithLength:16 type:GsonLinkedHashTreeMap_Node_class_()];
  self->threshold_ = (self->table_->size_ / 2) + (self->table_->size_ / 4);
}


#line 71
GsonLinkedHashTreeMap *new_GsonLinkedHashTreeMap_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap, initWithJavaUtilComparator_, comparator)
}


#line 71
GsonLinkedHashTreeMap *create_GsonLinkedHashTreeMap_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap, initWithJavaUtilComparator_, comparator)
}


#line 223
jboolean GsonLinkedHashTreeMap_equalWithId_withId_(GsonLinkedHashTreeMap *self, id a, id b) {
  return a == b || (a != nil && [a isEqual:b]);
}


#line 233
jint GsonLinkedHashTreeMap_secondaryHashWithInt_(jint h) {
  GsonLinkedHashTreeMap_initialize();
  h ^= (JreURShift32(h, 20)) ^ (JreURShift32(h, 12));
  return h ^ (JreURShift32(h, 7)) ^ (JreURShift32(h, 4));
}


#line 311
void GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *node, GsonLinkedHashTreeMap_Node *replacement) {
  GsonLinkedHashTreeMap_Node *parent = ((GsonLinkedHashTreeMap_Node *) nil_chk(node))->parent_;
  node->parent_ = nil;
  if (replacement != nil) {
    replacement->parent_ = parent;
  }
  
#line 318
  if (parent != nil) {
    if (parent->left_ == node) {
      parent->left_ = replacement;
    }
    else {
      
#line 322
      JreAssert(parent->right_ == node, @"com/google/gson/internal/LinkedHashTreeMap.java:322 condition failed: assert (parent.right == node);");
      parent->right_ = replacement;
    }
  }
  else {
    
#line 326
    jint index = node->hash__ & (((IOSObjectArray *) nil_chk(self->table_))->size_ - 1);
    (void) IOSObjectArray_Set(self->table_, index, replacement);
  }
}

void GsonLinkedHashTreeMap_rebalanceWithGsonLinkedHashTreeMap_Node_withBoolean_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *unbalanced, jboolean insert) {
  for (GsonLinkedHashTreeMap_Node *node = unbalanced; node != nil; node = node->parent_) {
    GsonLinkedHashTreeMap_Node *left = node->left_;
    GsonLinkedHashTreeMap_Node *right = node->right_;
    jint leftHeight = left != nil ? left->height_ : 0;
    jint rightHeight = right != nil ? right->height_ : 0;
    
#line 345
    jint delta = leftHeight - rightHeight;
    if (delta == -2) {
      GsonLinkedHashTreeMap_Node *rightLeft = ((GsonLinkedHashTreeMap_Node *) nil_chk(right))->left_;
      GsonLinkedHashTreeMap_Node *rightRight = right->right_;
      jint rightRightHeight = rightRight != nil ? rightRight->height_ : 0;
      jint rightLeftHeight = rightLeft != nil ? rightLeft->height_ : 0;
      
#line 352
      jint rightDelta = rightLeftHeight - rightRightHeight;
      if (rightDelta == -1 || (rightDelta == 0 && !insert)) {
        GsonLinkedHashTreeMap_rotateLeftWithGsonLinkedHashTreeMap_Node_(self, node);
      }
      else {
        
#line 356
        JreAssert(rightDelta == 1, @"com/google/gson/internal/LinkedHashTreeMap.java:356 condition failed: assert (rightDelta == 1);");
        GsonLinkedHashTreeMap_rotateRightWithGsonLinkedHashTreeMap_Node_(self, right);
        GsonLinkedHashTreeMap_rotateLeftWithGsonLinkedHashTreeMap_Node_(self, node);
      }
      if (insert) {
        break;
      }
    }
    else if (delta == 2) {
      GsonLinkedHashTreeMap_Node *leftLeft = ((GsonLinkedHashTreeMap_Node *) nil_chk(left))->left_;
      GsonLinkedHashTreeMap_Node *leftRight = left->right_;
      jint leftRightHeight = leftRight != nil ? leftRight->height_ : 0;
      jint leftLeftHeight = leftLeft != nil ? leftLeft->height_ : 0;
      
#line 370
      jint leftDelta = leftLeftHeight - leftRightHeight;
      if (leftDelta == 1 || (leftDelta == 0 && !insert)) {
        GsonLinkedHashTreeMap_rotateRightWithGsonLinkedHashTreeMap_Node_(self, node);
      }
      else {
        
#line 374
        JreAssert(leftDelta == -1, @"com/google/gson/internal/LinkedHashTreeMap.java:374 condition failed: assert (leftDelta == -1);");
        GsonLinkedHashTreeMap_rotateLeftWithGsonLinkedHashTreeMap_Node_(self, left);
        GsonLinkedHashTreeMap_rotateRightWithGsonLinkedHashTreeMap_Node_(self, node);
      }
      if (insert) {
        break;
      }
    }
    else if (delta == 0) {
      node->height_ = leftHeight + 1;
      if (insert) {
        break;
      }
    }
    else {
      JreAssert((delta == -1 || delta == 1), @"com/google/gson/internal/LinkedHashTreeMap.java:389 condition failed: assert (delta == -1 || delta == 1);");
      node->height_ = JavaLangMath_maxWithInt_withInt_(leftHeight, rightHeight) + 1;
      if (!insert) {
        break;
      }
    }
  }
}


#line 401
void GsonLinkedHashTreeMap_rotateLeftWithGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *root) {
  GsonLinkedHashTreeMap_Node *left = ((GsonLinkedHashTreeMap_Node *) nil_chk(root))->left_;
  GsonLinkedHashTreeMap_Node *pivot = root->right_;
  GsonLinkedHashTreeMap_Node *pivotLeft = ((GsonLinkedHashTreeMap_Node *) nil_chk(pivot))->left_;
  GsonLinkedHashTreeMap_Node *pivotRight = pivot->right_;
  
#line 408
  root->right_ = pivotLeft;
  if (pivotLeft != nil) {
    pivotLeft->parent_ = root;
  }
  
#line 413
  GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, root, pivot);
  
#line 416
  pivot->left_ = root;
  root->parent_ = pivot;
  
#line 420
  root->height_ = JavaLangMath_maxWithInt_withInt_(left != nil ? left->height_ : 0,
#line 421
  pivotLeft != nil ? pivotLeft->height_ : 0) + 1;
  pivot->height_ = JavaLangMath_maxWithInt_withInt_(root->height_,
#line 423
  pivotRight != nil ? pivotRight->height_ : 0) + 1;
}

void GsonLinkedHashTreeMap_rotateRightWithGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap *self, GsonLinkedHashTreeMap_Node *root) {
  GsonLinkedHashTreeMap_Node *pivot = ((GsonLinkedHashTreeMap_Node *) nil_chk(root))->left_;
  GsonLinkedHashTreeMap_Node *right = root->right_;
  GsonLinkedHashTreeMap_Node *pivotLeft = ((GsonLinkedHashTreeMap_Node *) nil_chk(pivot))->left_;
  GsonLinkedHashTreeMap_Node *pivotRight = pivot->right_;
  
#line 436
  root->left_ = pivotRight;
  if (pivotRight != nil) {
    pivotRight->parent_ = root;
  }
  
#line 441
  GsonLinkedHashTreeMap_replaceInParentWithGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, root, pivot);
  
#line 444
  pivot->right_ = root;
  root->parent_ = pivot;
  
#line 448
  root->height_ = JavaLangMath_maxWithInt_withInt_(right != nil ? right->height_ : 0,
#line 449
  pivotRight != nil ? pivotRight->height_ : 0) + 1;
  pivot->height_ = JavaLangMath_maxWithInt_withInt_(root->height_,
#line 451
  pivotLeft != nil ? pivotLeft->height_ : 0) + 1;
}


#line 557
void GsonLinkedHashTreeMap_doubleCapacity(GsonLinkedHashTreeMap *self) {
  self->table_ = GsonLinkedHashTreeMap_doubleCapacityWithGsonLinkedHashTreeMap_NodeArray_(self->table_);
  self->threshold_ = (((IOSObjectArray *) nil_chk(self->table_))->size_ / 2) + (self->table_->size_ / 4);
}


#line 566
IOSObjectArray *GsonLinkedHashTreeMap_doubleCapacityWithGsonLinkedHashTreeMap_NodeArray_(IOSObjectArray *oldTable) {
  GsonLinkedHashTreeMap_initialize();
  jint oldCapacity = ((IOSObjectArray *) nil_chk(oldTable))->size_;
  IOSObjectArray *newTable = [IOSObjectArray newArrayWithLength:
#line 570
  oldCapacity * 2 type:GsonLinkedHashTreeMap_Node_class_()];
  GsonLinkedHashTreeMap_AvlIterator *iterator = new_GsonLinkedHashTreeMap_AvlIterator_init();
  GsonLinkedHashTreeMap_AvlBuilder *leftBuilder = new_GsonLinkedHashTreeMap_AvlBuilder_init();
  GsonLinkedHashTreeMap_AvlBuilder *rightBuilder = new_GsonLinkedHashTreeMap_AvlBuilder_init();
  
#line 576
  for (jint i = 0; i < oldCapacity; i++) {
    GsonLinkedHashTreeMap_Node *root = IOSObjectArray_Get(oldTable, i);
    if (root == nil) {
      continue;
    }
    
#line 583
    [iterator resetWithGsonLinkedHashTreeMap_Node:root];
    jint leftSize = 0;
    jint rightSize = 0;
    for (GsonLinkedHashTreeMap_Node *node; (node = [iterator next]) != nil; ) {
      if ((((GsonLinkedHashTreeMap_Node *) nil_chk(node))->hash__ & oldCapacity) == 0) {
        leftSize++;
      }
      else {
        
#line 590
        rightSize++;
      }
    }
    
#line 595
    [leftBuilder resetWithInt:leftSize];
    [rightBuilder resetWithInt:rightSize];
    [iterator resetWithGsonLinkedHashTreeMap_Node:root];
    for (GsonLinkedHashTreeMap_Node *node; (node = [iterator next]) != nil; ) {
      if ((((GsonLinkedHashTreeMap_Node *) nil_chk(node))->hash__ & oldCapacity) == 0) {
        [leftBuilder addWithGsonLinkedHashTreeMap_Node:node];
      }
      else {
        
#line 602
        [rightBuilder addWithGsonLinkedHashTreeMap_Node:node];
      }
    }
    
#line 607
    (void) IOSObjectArray_Set(newTable, i, leftSize > 0 ? [leftBuilder root] : nil);
    (void) IOSObjectArray_Set(newTable, i + oldCapacity, rightSize > 0 ? [rightBuilder root] : nil);
  }
  return newTable;
}


#line 861
id GsonLinkedHashTreeMap_writeReplace(GsonLinkedHashTreeMap *self) {
  return new_JavaUtilLinkedHashMap_initWithJavaUtilMap_(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedHashTreeMap)

J2OBJC_NAME_MAPPING(GsonLinkedHashTreeMap, "com.google.gson.internal", "Gson")

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 42
@implementation GsonLinkedHashTreeMap_1

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 42
- (instancetype)init {
  GsonLinkedHashTreeMap_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 43
- (jint)compareWithId:(id<JavaLangComparable>)a
               withId:(id<JavaLangComparable>)b {
  return [((id<JavaLangComparable>) nil_chk(a)) compareToWithId:b];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LJavaLangComparable;LJavaLangComparable;", "LGsonLinkedHashTreeMap;", "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Comparable;>;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_1 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_GsonLinkedHashTreeMap_1;
}

@end


#line 42
void GsonLinkedHashTreeMap_1_init(GsonLinkedHashTreeMap_1 *self) {
  NSObject_init(self);
}


#line 42
GsonLinkedHashTreeMap_1 *new_GsonLinkedHashTreeMap_1_init() {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_1, init)
}


#line 42
GsonLinkedHashTreeMap_1 *create_GsonLinkedHashTreeMap_1_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_1, init)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 467
@implementation GsonLinkedHashTreeMap_Node

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 479
- (instancetype)init {
  GsonLinkedHashTreeMap_Node_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 486
- (instancetype)initWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)parent
                                            withId:(id)key
                                           withInt:(jint)hash_
                    withGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)next
                    withGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)prev {
  GsonLinkedHashTreeMap_Node_initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(self, parent, key, hash_, next, prev);
  return self;
}


#line 497
- (id)getKey {
  return key_;
}

- (id)getValue {
  return value_;
}

- (id)setValueWithId:(id)value {
  id oldValue = self->value_;
  self->value_ = value;
  return oldValue;
}

- (jboolean)isEqual:(id)o {
  
#line 513
  if ([JavaUtilMap_Entry_class_() isInstance:o]) {
    id<JavaUtilMap_Entry> other = (id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_());
    return (key_ == nil ? [((id<JavaUtilMap_Entry>) nil_chk(other)) getKey] == nil : [key_ isEqual:[((id<JavaUtilMap_Entry>) nil_chk(other)) getKey]]) &&
#line 516
    (value_ == nil ? [other getValue] == nil : [value_ isEqual:[other getValue]]);
  }
  return false;
}


#line 521
- (NSUInteger)hash {
  return (key_ == nil ? 0 : ((jint) [key_ hash])) ^
#line 523
  (value_ == nil ? 0 : ((jint) [value_ hash]));
}


#line 526
- (NSString *)description {
  return JreStrcat("@C@", key_, '=', value_);
}


#line 533
- (GsonLinkedHashTreeMap_Node *)first {
  GsonLinkedHashTreeMap_Node *node = self;
  GsonLinkedHashTreeMap_Node *child = node->left_;
  while (child != nil) {
    node = child;
    child = node->left_;
  }
  return node;
}


#line 546
- (GsonLinkedHashTreeMap_Node *)last {
  GsonLinkedHashTreeMap_Node *node = self;
  GsonLinkedHashTreeMap_Node *child = node->right_;
  while (child != nil) {
    node = child;
    child = node->right_;
  }
  return node;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x1, -1, -1, -1, 10, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x1, -1, -1, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithGsonLinkedHashTreeMap_Node:withId:withInt:withGsonLinkedHashTreeMap_Node:withGsonLinkedHashTreeMap_Node:);
  methods[2].selector = @selector(getKey);
  methods[3].selector = @selector(getValue);
  methods[4].selector = @selector(setValueWithId:);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(first);
  methods[9].selector = @selector(last);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "left_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "right_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "next_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "prev_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "key_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 12, -1 },
    { "hash__", "I", .constantValue.asLong = 0, 0x10, 13, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 14, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LGsonLinkedHashTreeMap_Node;LNSObject;ILGsonLinkedHashTreeMap_Node;LGsonLinkedHashTreeMap_Node;", "(Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;TK;ILcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;)V", "()TK;", "()TV;", "setValue", "LNSObject;", "(TV;)TV;", "equals", "hashCode", "toString", "()Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "TK;", "hash", "TV;", "LGsonLinkedHashTreeMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map$Entry<TK;TV;>;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_Node = { "Node", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x18, 10, 9, 15, -1, -1, 16, -1 };
  return &_GsonLinkedHashTreeMap_Node;
}

@end


#line 479
void GsonLinkedHashTreeMap_Node_init(GsonLinkedHashTreeMap_Node *self) {
  NSObject_init(self);
  
#line 480
  self->key_ = nil;
  self->hash__ = -1;
  self->next_ = self->prev_ = self;
}


#line 479
GsonLinkedHashTreeMap_Node *new_GsonLinkedHashTreeMap_Node_init() {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_Node, init)
}


#line 479
GsonLinkedHashTreeMap_Node *create_GsonLinkedHashTreeMap_Node_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_Node, init)
}


#line 486
void GsonLinkedHashTreeMap_Node_initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap_Node *self, GsonLinkedHashTreeMap_Node *parent, id key, jint hash_, GsonLinkedHashTreeMap_Node *next, GsonLinkedHashTreeMap_Node *prev) {
  NSObject_init(self);
  
#line 487
  self->parent_ = parent;
  self->key_ = key;
  self->hash__ = hash_;
  self->height_ = 1;
  self->next_ = next;
  self->prev_ = prev;
  ((GsonLinkedHashTreeMap_Node *) nil_chk(prev))->next_ = self;
  ((GsonLinkedHashTreeMap_Node *) nil_chk(next))->prev_ = self;
}


#line 486
GsonLinkedHashTreeMap_Node *new_GsonLinkedHashTreeMap_Node_initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap_Node *parent, id key, jint hash_, GsonLinkedHashTreeMap_Node *next, GsonLinkedHashTreeMap_Node *prev) {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_Node, initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_, parent, key, hash_, next, prev)
}


#line 486
GsonLinkedHashTreeMap_Node *create_GsonLinkedHashTreeMap_Node_initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_(GsonLinkedHashTreeMap_Node *parent, id key, jint hash_, GsonLinkedHashTreeMap_Node *next, GsonLinkedHashTreeMap_Node *prev) {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_Node, initWithGsonLinkedHashTreeMap_Node_withId_withInt_withGsonLinkedHashTreeMap_Node_withGsonLinkedHashTreeMap_Node_, parent, key, hash_, next, prev)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedHashTreeMap_Node)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 622
@implementation GsonLinkedHashTreeMap_AvlIterator

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 622
- (instancetype)init {
  GsonLinkedHashTreeMap_AvlIterator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 626
- (void)resetWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)root {
  GsonLinkedHashTreeMap_Node *stackTop = nil;
  for (GsonLinkedHashTreeMap_Node *n = root; n != nil; n = n->left_) {
    n->parent_ = stackTop;
    stackTop = n;
  }
  self->stackTop_ = stackTop;
}

- (GsonLinkedHashTreeMap_Node *)next {
  GsonLinkedHashTreeMap_Node *stackTop = self->stackTop_;
  if (stackTop == nil) {
    return nil;
  }
  GsonLinkedHashTreeMap_Node *result = stackTop;
  stackTop = result->parent_;
  result->parent_ = nil;
  for (GsonLinkedHashTreeMap_Node *n = result->right_; n != nil; n = n->left_) {
    n->parent_ = stackTop;
    stackTop = n;
  }
  self->stackTop_ = stackTop;
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x1, -1, -1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(resetWithGsonLinkedHashTreeMap_Node:);
  methods[2].selector = @selector(next);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stackTop_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x2, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "reset", "LGsonLinkedHashTreeMap_Node;", "(Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;)V", "()Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "LGsonLinkedHashTreeMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_AvlIterator = { "AvlIterator", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8, 3, 1, 5, -1, -1, 6, -1 };
  return &_GsonLinkedHashTreeMap_AvlIterator;
}

@end


#line 622
void GsonLinkedHashTreeMap_AvlIterator_init(GsonLinkedHashTreeMap_AvlIterator *self) {
  NSObject_init(self);
}


#line 622
GsonLinkedHashTreeMap_AvlIterator *new_GsonLinkedHashTreeMap_AvlIterator_init() {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_AvlIterator, init)
}


#line 622
GsonLinkedHashTreeMap_AvlIterator *create_GsonLinkedHashTreeMap_AvlIterator_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_AvlIterator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedHashTreeMap_AvlIterator)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 670
@implementation GsonLinkedHashTreeMap_AvlBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 670
- (instancetype)init {
  GsonLinkedHashTreeMap_AvlBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 677
- (void)resetWithInt:(jint)targetSize {
  
#line 679
  jint treeCapacity = JavaLangInteger_highestOneBitWithInt_(targetSize) * 2 - 1;
  leavesToSkip_ = treeCapacity - targetSize;
  size_ = 0;
  leavesSkipped_ = 0;
  stack_ = nil;
}


#line 686
- (void)addWithGsonLinkedHashTreeMap_Node:(GsonLinkedHashTreeMap_Node *)node {
  ((GsonLinkedHashTreeMap_Node *) nil_chk(node))->left_ = node->parent_ = node->right_ = nil;
  node->height_ = 1;
  
#line 691
  if (leavesToSkip_ > 0 && (size_ & 1) == 0) {
    size_++;
    leavesToSkip_--;
    leavesSkipped_++;
  }
  
#line 697
  node->parent_ = stack_;
  stack_ = node;
  size_++;
  
#line 702
  if (leavesToSkip_ > 0 && (size_ & 1) == 0) {
    size_++;
    leavesToSkip_--;
    leavesSkipped_++;
  }
  
#line 721
  for (jint scale_ = 4; (size_ & (scale_ - 1)) == scale_ - 1; scale_ *= 2) {
    if (leavesSkipped_ == 0) {
      
#line 724
      GsonLinkedHashTreeMap_Node *right = stack_;
      GsonLinkedHashTreeMap_Node *center = ((GsonLinkedHashTreeMap_Node *) nil_chk(right))->parent_;
      GsonLinkedHashTreeMap_Node *left = ((GsonLinkedHashTreeMap_Node *) nil_chk(center))->parent_;
      center->parent_ = ((GsonLinkedHashTreeMap_Node *) nil_chk(left))->parent_;
      stack_ = center;
      
#line 730
      center->left_ = left;
      center->right_ = right;
      center->height_ = right->height_ + 1;
      left->parent_ = center;
      right->parent_ = center;
    }
    else
#line 735
    if (leavesSkipped_ == 1) {
      
#line 737
      GsonLinkedHashTreeMap_Node *right = stack_;
      GsonLinkedHashTreeMap_Node *center = ((GsonLinkedHashTreeMap_Node *) nil_chk(right))->parent_;
      stack_ = center;
      
#line 741
      ((GsonLinkedHashTreeMap_Node *) nil_chk(center))->right_ = right;
      center->height_ = right->height_ + 1;
      right->parent_ = center;
      leavesSkipped_ = 0;
    }
    else
#line 745
    if (leavesSkipped_ == 2) {
      leavesSkipped_ = 0;
    }
  }
}


#line 751
- (GsonLinkedHashTreeMap_Node *)root {
  GsonLinkedHashTreeMap_Node *stackTop = self->stack_;
  if (((GsonLinkedHashTreeMap_Node *) nil_chk(stackTop))->parent_ != nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  return stackTop;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x0, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(resetWithInt:);
  methods[2].selector = @selector(addWithGsonLinkedHashTreeMap_Node:);
  methods[3].selector = @selector(root);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stack_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
    { "leavesToSkip_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "leavesSkipped_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "reset", "I", "add", "LGsonLinkedHashTreeMap_Node;", "(Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;)V", "()Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "LGsonLinkedHashTreeMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_AvlBuilder = { "AvlBuilder", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x18, 4, 4, 7, -1, -1, 8, -1 };
  return &_GsonLinkedHashTreeMap_AvlBuilder;
}

@end


#line 670
void GsonLinkedHashTreeMap_AvlBuilder_init(GsonLinkedHashTreeMap_AvlBuilder *self) {
  NSObject_init(self);
}


#line 670
GsonLinkedHashTreeMap_AvlBuilder *new_GsonLinkedHashTreeMap_AvlBuilder_init() {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_AvlBuilder, init)
}


#line 670
GsonLinkedHashTreeMap_AvlBuilder *create_GsonLinkedHashTreeMap_AvlBuilder_init() {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_AvlBuilder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedHashTreeMap_AvlBuilder)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 760
@implementation GsonLinkedHashTreeMap_LinkedTreeMapIterator


#line 765
- (instancetype)initWithGsonLinkedHashTreeMap:(GsonLinkedHashTreeMap *)outer$ {
  GsonLinkedHashTreeMap_LinkedTreeMapIterator_initWithGsonLinkedHashTreeMap_(self, outer$);
  return self;
}


#line 768
- (jboolean)hasNext {
  return next_ != this$0_->header_;
}

- (GsonLinkedHashTreeMap_Node *)nextNode {
  return GsonLinkedHashTreeMap_LinkedTreeMapIterator_nextNode(self);
}


#line 784
- (void)remove {
  if (lastReturned_ == nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  [this$0_ removeInternalWithGsonLinkedHashTreeMap_Node:lastReturned_ withBoolean:true];
  lastReturned_ = nil;
  expectedModCount_ = this$0_->modCount_;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGsonLinkedHashTreeMap_Node;", 0x10, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedHashTreeMap:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(nextNode);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGsonLinkedHashTreeMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "next_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "lastReturned_", "LGsonLinkedHashTreeMap_Node;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "expectedModCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "Lcom/google/gson/internal/LinkedHashTreeMap<TK;TV;>;", "Lcom/google/gson/internal/LinkedHashTreeMap$Node<TK;TV;>;", "LGsonLinkedHashTreeMap;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_LinkedTreeMapIterator = { "LinkedTreeMapIterator", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x402, 4, 4, 3, -1, -1, 4, -1 };
  return &_GsonLinkedHashTreeMap_LinkedTreeMapIterator;
}

@end


#line 765
void GsonLinkedHashTreeMap_LinkedTreeMapIterator_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap_LinkedTreeMapIterator *self, GsonLinkedHashTreeMap *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->next_ =
#line 761
  ((GsonLinkedHashTreeMap_Node *) nil_chk(outer$->header_))->next_;
  self->lastReturned_ = nil;
  self->expectedModCount_ = outer$->modCount_;
}


#line 772
GsonLinkedHashTreeMap_Node *GsonLinkedHashTreeMap_LinkedTreeMapIterator_nextNode(GsonLinkedHashTreeMap_LinkedTreeMapIterator *self) {
  GsonLinkedHashTreeMap_Node *e = self->next_;
  if (e == self->this$0_->header_) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  if (self->this$0_->modCount_ != self->expectedModCount_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
  self->next_ = ((GsonLinkedHashTreeMap_Node *) nil_chk(e))->next_;
  return self->lastReturned_ = e;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedHashTreeMap_LinkedTreeMapIterator)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 794
@implementation GsonLinkedHashTreeMap_EntrySet


#line 794
- (instancetype)initWithGsonLinkedHashTreeMap:(GsonLinkedHashTreeMap *)outer$ {
  GsonLinkedHashTreeMap_EntrySet_initWithGsonLinkedHashTreeMap_(self, outer$);
  return self;
}


#line 795
- (jint)size {
  return this$0_->size_;
}

- (id<JavaUtilIterator>)iterator {
  return new_GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(self);
}


#line 807
- (jboolean)containsWithId:(id)o {
  return [JavaUtilMap_Entry_class_() isInstance:o] && [this$0_ findByEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_())] != nil;
}

- (jboolean)removeWithId:(id)o {
  if (!([JavaUtilMap_Entry_class_() isInstance:o])) {
    return false;
  }
  
#line 816
  GsonLinkedHashTreeMap_Node *node = [this$0_ findByEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_())];
  if (node == nil) {
    return false;
  }
  [this$0_ removeInternalWithGsonLinkedHashTreeMap_Node:node withBoolean:true];
  return true;
}


#line 824
- (void)clear {
  [this$0_ clear];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedHashTreeMap:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(iterator);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(removeWithId:);
  methods[5].selector = @selector(clear);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGsonLinkedHashTreeMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;", "contains", "LNSObject;", "remove", "Lcom/google/gson/internal/LinkedHashTreeMap<TK;TV;>;", "LGsonLinkedHashTreeMap;", "Ljava/util/AbstractSet<Ljava/util/Map$Entry<TK;TV;>;>;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_EntrySet = { "EntrySet", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x10, 6, 1, 5, -1, -1, 6, -1 };
  return &_GsonLinkedHashTreeMap_EntrySet;
}

@end


#line 794
void GsonLinkedHashTreeMap_EntrySet_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap_EntrySet *self, GsonLinkedHashTreeMap *outer$) {
  self->this$0_ = outer$;
  JavaUtilAbstractSet_init(self);
}


#line 794
GsonLinkedHashTreeMap_EntrySet *new_GsonLinkedHashTreeMap_EntrySet_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_EntrySet, initWithGsonLinkedHashTreeMap_, outer$)
}


#line 794
GsonLinkedHashTreeMap_EntrySet *create_GsonLinkedHashTreeMap_EntrySet_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_EntrySet, initWithGsonLinkedHashTreeMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedHashTreeMap_EntrySet)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 800
@implementation GsonLinkedHashTreeMap_EntrySet_1


#line 800
- (instancetype)initWithGsonLinkedHashTreeMap_EntrySet:(GsonLinkedHashTreeMap_EntrySet *)outer$ {
  GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(self, outer$);
  return self;
}


#line 801
- (id<JavaUtilMap_Entry>)next {
  return GsonLinkedHashTreeMap_LinkedTreeMapIterator_nextNode(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedHashTreeMap_EntrySet:);
  methods[1].selector = @selector(next);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map$Entry<TK;TV;>;", "LGsonLinkedHashTreeMap_EntrySet;", "iterator", "Lcom/google/gson/internal/LinkedHashTreeMap$LinkedTreeMapIterator<Ljava/util/Map$Entry<TK;TV;>;>;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_EntrySet_1 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonLinkedHashTreeMap_EntrySet_1;
}

@end


#line 800
void GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(GsonLinkedHashTreeMap_EntrySet_1 *self, GsonLinkedHashTreeMap_EntrySet *outer$) {
  GsonLinkedHashTreeMap_LinkedTreeMapIterator_initWithGsonLinkedHashTreeMap_(self, outer$->this$0_);
}


#line 800
GsonLinkedHashTreeMap_EntrySet_1 *new_GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(GsonLinkedHashTreeMap_EntrySet *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_EntrySet_1, initWithGsonLinkedHashTreeMap_EntrySet_, outer$)
}


#line 800
GsonLinkedHashTreeMap_EntrySet_1 *create_GsonLinkedHashTreeMap_EntrySet_1_initWithGsonLinkedHashTreeMap_EntrySet_(GsonLinkedHashTreeMap_EntrySet *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_EntrySet_1, initWithGsonLinkedHashTreeMap_EntrySet_, outer$)
}

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 829
@implementation GsonLinkedHashTreeMap_KeySet


#line 829
- (instancetype)initWithGsonLinkedHashTreeMap:(GsonLinkedHashTreeMap *)outer$ {
  GsonLinkedHashTreeMap_KeySet_initWithGsonLinkedHashTreeMap_(self, outer$);
  return self;
}


#line 830
- (jint)size {
  return this$0_->size_;
}

- (id<JavaUtilIterator>)iterator {
  return new_GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(self);
}


#line 842
- (jboolean)containsWithId:(id)o {
  return [this$0_ containsKeyWithId:o];
}

- (jboolean)removeWithId:(id)key {
  return [this$0_ removeInternalByKeyWithId:key] != nil;
}

- (void)clear {
  [this$0_ clear];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedHashTreeMap:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(iterator);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(removeWithId:);
  methods[5].selector = @selector(clear);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGsonLinkedHashTreeMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<TK;>;", "contains", "LNSObject;", "remove", "Lcom/google/gson/internal/LinkedHashTreeMap<TK;TV;>;", "LGsonLinkedHashTreeMap;", "Ljava/util/AbstractSet<TK;>;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_KeySet = { "KeySet", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x10, 6, 1, 5, -1, -1, 6, -1 };
  return &_GsonLinkedHashTreeMap_KeySet;
}

@end


#line 829
void GsonLinkedHashTreeMap_KeySet_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap_KeySet *self, GsonLinkedHashTreeMap *outer$) {
  self->this$0_ = outer$;
  JavaUtilAbstractSet_init(self);
}


#line 829
GsonLinkedHashTreeMap_KeySet *new_GsonLinkedHashTreeMap_KeySet_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_KeySet, initWithGsonLinkedHashTreeMap_, outer$)
}


#line 829
GsonLinkedHashTreeMap_KeySet *create_GsonLinkedHashTreeMap_KeySet_initWithGsonLinkedHashTreeMap_(GsonLinkedHashTreeMap *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_KeySet, initWithGsonLinkedHashTreeMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonLinkedHashTreeMap_KeySet)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java"


#line 835
@implementation GsonLinkedHashTreeMap_KeySet_1


#line 835
- (instancetype)initWithGsonLinkedHashTreeMap_KeySet:(GsonLinkedHashTreeMap_KeySet *)outer$ {
  GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(self, outer$);
  return self;
}


#line 836
- (id)next {
  return ((GsonLinkedHashTreeMap_Node *) nil_chk(GsonLinkedHashTreeMap_LinkedTreeMapIterator_nextNode(self)))->key_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGsonLinkedHashTreeMap_KeySet:);
  methods[1].selector = @selector(next);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TK;", "LGsonLinkedHashTreeMap_KeySet;", "iterator", "Lcom/google/gson/internal/LinkedHashTreeMap$LinkedTreeMapIterator<TK;>;" };
  static const J2ObjcClassInfo _GsonLinkedHashTreeMap_KeySet_1 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonLinkedHashTreeMap_KeySet_1;
}

@end


#line 835
void GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(GsonLinkedHashTreeMap_KeySet_1 *self, GsonLinkedHashTreeMap_KeySet *outer$) {
  GsonLinkedHashTreeMap_LinkedTreeMapIterator_initWithGsonLinkedHashTreeMap_(self, outer$->this$0_);
}


#line 835
GsonLinkedHashTreeMap_KeySet_1 *new_GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(GsonLinkedHashTreeMap_KeySet *outer$) {
  J2OBJC_NEW_IMPL(GsonLinkedHashTreeMap_KeySet_1, initWithGsonLinkedHashTreeMap_KeySet_, outer$)
}


#line 835
GsonLinkedHashTreeMap_KeySet_1 *create_GsonLinkedHashTreeMap_KeySet_1_initWithGsonLinkedHashTreeMap_KeySet_(GsonLinkedHashTreeMap_KeySet *outer$) {
  J2OBJC_CREATE_IMPL(GsonLinkedHashTreeMap_KeySet_1, initWithGsonLinkedHashTreeMap_KeySet_, outer$)
}
