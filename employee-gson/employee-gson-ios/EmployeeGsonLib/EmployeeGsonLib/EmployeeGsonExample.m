//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/employee/gson/EmployeeGsonExample.java
//

#include "Address.h"
#include "AddressHolder.h"
#include "Employee.h"
#include "EmployeeGsonExample.h"
#include "EmployeeService.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PersonalAddress.h"
#include "PersonalAddressHolder.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/employee/gson/EmployeeGsonExample.java"

J2OBJC_INITIALIZED_DEFN(EmpEmployeeGsonExample)

EmpEmployeeService *EmpEmployeeGsonExample_employeeService;


#line 11
@implementation EmpEmployeeGsonExample

+ (EmpEmployeeService *)employeeService {
  return EmpEmployeeGsonExample_employeeService;
}

+ (void)setEmployeeService:(EmpEmployeeService *)value {
  EmpEmployeeGsonExample_employeeService = value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 11
- (instancetype)init {
  EmpEmployeeGsonExample_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 15
+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EmpEmployeeGsonExample_mainWithNSStringArray_(args);
}

+ (void)convertEmployee {
  EmpEmployeeGsonExample_convertEmployee();
}


#line 62
+ (EmpEmployee *)createEmployeeWithInt:(jint)id_ {
  return EmpEmployeeGsonExample_createEmployeeWithInt_(id_);
}


#line 91
+ (id<JavaUtilList>)createEmployeesWithInt:(jint)numberOfEmployees {
  return EmpEmployeeGsonExample_createEmployeesWithInt_(numberOfEmployees);
}


#line 99
+ (id<JavaUtilList>)convertEmployeesWithInt:(jint)numberOfEmployees {
  return EmpEmployeeGsonExample_convertEmployeesWithInt_(numberOfEmployees);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEmpEmployee;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 5, 4, -1, 6, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 7, 4, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(convertEmployee);
  methods[3].selector = @selector(createEmployeeWithInt:);
  methods[4].selector = @selector(createEmployeesWithInt:);
  methods[5].selector = @selector(convertEmployeesWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "employeeService", "LEmpEmployeeService;", .constantValue.asLong = 0, 0x8, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "main", "[LNSString;", "LJavaIoIOException;", "createEmployee", "I", "createEmployees", "(I)Ljava/util/List<Lcom/employee/model/Employee;>;", "convertEmployees", &EmpEmployeeGsonExample_employeeService };
  static const J2ObjcClassInfo _EmpEmployeeGsonExample = { "EmployeeGsonExample", "com.employee.gson", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_EmpEmployeeGsonExample;
}

+ (void)initialize {
  if (self == [EmpEmployeeGsonExample class]) {
    EmpEmployeeGsonExample_employeeService = new_EmpEmployeeService_init();
    J2OBJC_SET_INITIALIZED(EmpEmployeeGsonExample)
  }
}

@end


#line 11
void EmpEmployeeGsonExample_init(EmpEmployeeGsonExample *self) {
  NSObject_init(self);
}


#line 11
EmpEmployeeGsonExample *new_EmpEmployeeGsonExample_init() {
  J2OBJC_NEW_IMPL(EmpEmployeeGsonExample, init)
}


#line 11
EmpEmployeeGsonExample *create_EmpEmployeeGsonExample_init() {
  J2OBJC_CREATE_IMPL(EmpEmployeeGsonExample, init)
}

void EmpEmployeeGsonExample_mainWithNSStringArray_(IOSObjectArray *args) {
  EmpEmployeeGsonExample_initialize();
  
#line 16
  (void) EmpEmployeeGsonExample_convertEmployeesWithInt_(1);
}


#line 19
void EmpEmployeeGsonExample_convertEmployee() {
  EmpEmployeeGsonExample_initialize();
  NSString *employeeJson = @"{\n  \"empID\": 100,\n  \"name\": \"David\",\n  \"permanent\": false,\n  \"birthDate\": \"2001-10-25T11:00:00-0100\",\naddressHolder: {    \"type\": \"PERSONAL\",\n  \"min\": {\n    \"personalAddressField\": \"My home\",\n    \"street\": \"BTM 1st Stage\",\n    \"freeText\": \"Personal address free text\",\n    \"city\": \"Bangalore\",\n    \"zipcode\": 560100\n  }\n },\n  \"phoneNumbers\": [\n    123456,\n    987654\n  ],\n  \"role\": \"Manager\",\n  \"cities\": [\n    \"Los Angeles\",\n    \"New York\"\n  ],\n  \"properties\": {\n    \"age\": \"28 years\",\n    \"salary\": \"1000 Rs\"\n  }\n}";
  
#line 52
  EmpEmployee *emp1 = [((EmpEmployeeService *) nil_chk(EmpEmployeeGsonExample_employeeService)) employeeFromJsonWithNSString:employeeJson];
  
#line 55
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"\n\nEmployee Object\n\n", emp1)];
  
#line 57
  EmpPersonalAddress *empAddress = (EmpPersonalAddress *) cast_chk([((EmpAddressHolder *) nil_chk([((EmpEmployee *) nil_chk(emp1)) getAddressHolder])) getMin], [EmpPersonalAddress class]);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"personal address line=", [((EmpPersonalAddress *) nil_chk(empAddress)) getPersonalAddressField])];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"personal address free text =", [empAddress getFreeText])];
}


#line 62
EmpEmployee *EmpEmployeeGsonExample_createEmployeeWithInt_(jint id_) {
  EmpEmployeeGsonExample_initialize();
  
#line 63
  EmpEmployee *emp = new_EmpEmployee_init();
  [emp setIdWithInt:id_];
  [emp setNameWithNSString:JreStrcat("$I", @"David", id_)];
  [emp setPermanentWithBoolean:false];
  [emp setPhoneNumbersWithLongArray:[IOSLongArray newArrayWithLongs:(jlong[]){ 123456 + id_, 987654 + id_ } count:2]];
  [emp setRoleWithNSString:JreStrcat("$I", @"Manager", id_)];
  
#line 70
  EmpPersonalAddress *add = new_EmpPersonalAddress_init();
  [add setCityWithNSString:JreStrcat("$I", @"Bangalore", id_)];
  [add setStreetWithNSString:JreStrcat("$I", @"BTM 1st Stage", id_)];
  [add setZipcodeWithInt:560100 + id_];
  EmpAddressHolder *addressHolder = new_EmpPersonalAddressHolder_init();
  [addressHolder setMinWithEmpAddress:add];
  [emp setAddressHolderWithEmpAddressHolder:addressHolder];
  
#line 78
  id<JavaUtilList> cities = new_JavaUtilArrayList_init();
  [cities addWithId:JreStrcat("$I", @"Los Angeles", id_)];
  [cities addWithId:JreStrcat("$I", @"New York", id_)];
  [emp setCitiesWithJavaUtilList:cities];
  
#line 83
  id<JavaUtilMap> props = new_JavaUtilHashMap_init();
  (void) [props putWithId:@"salary" withId:JreStrcat("$I", @"1000 Rs", id_)];
  (void) [props putWithId:@"age" withId:JreStrcat("$I", @"28 years", id_)];
  [emp setPropertiesWithJavaUtilMap:props];
  
#line 88
  return emp;
}


#line 91
id<JavaUtilList> EmpEmployeeGsonExample_createEmployeesWithInt_(jint numberOfEmployees) {
  EmpEmployeeGsonExample_initialize();
  
#line 92
  id<JavaUtilList> employees = new_JavaUtilArrayList_init();
  for (jint i = 0; i < numberOfEmployees; i++) {
    [employees addWithId:EmpEmployeeGsonExample_createEmployeeWithInt_(i + 1)];
  }
  return employees;
}


#line 99
id<JavaUtilList> EmpEmployeeGsonExample_convertEmployeesWithInt_(jint numberOfEmployees) {
  EmpEmployeeGsonExample_initialize();
  
#line 100
  id<JavaUtilList> employees = EmpEmployeeGsonExample_createEmployeesWithInt_(numberOfEmployees);
  NSString *employeesJson = [((EmpEmployeeService *) nil_chk(EmpEmployeeGsonExample_employeeService)) employeesToJsonWithJavaUtilList:employees];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"employees to json=", employeesJson)];
  id<JavaUtilList> convertedEmployees = [((EmpEmployeeService *) nil_chk(EmpEmployeeGsonExample_employeeService)) employeesFromJsonWithNSString:employeesJson];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I", @"converted employees count=", [((id<JavaUtilList>) nil_chk(convertedEmployees)) size])];
  return convertedEmployees;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EmpEmployeeGsonExample)

J2OBJC_NAME_MAPPING(EmpEmployeeGsonExample, "com.employee.gson", "Emp")
