//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/google/gson/stream/MalformedJsonException.java
//

#include "J2ObjC_source.h"
#include "MalformedJsonException.h"
#include "java/io/IOException.h"
#include "java/lang/Throwable.h"

inline jlong GsonMalformedJsonException_get_serialVersionUID(void);
#define GsonMalformedJsonException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(GsonMalformedJsonException, serialVersionUID, jlong)

#line 1 "/Users/ahmedmohammed/intelliJWorkspace/EmployeeGson/employee-gson/src/main/java/com/google/gson/stream/MalformedJsonException.java"


#line 25
@implementation GsonMalformedJsonException


#line 28
- (instancetype)initWithNSString:(NSString *)msg {
  GsonMalformedJsonException_initWithNSString_(self, msg);
  return self;
}


#line 32
- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)throwable {
  GsonMalformedJsonException_initWithNSString_withJavaLangThrowable_(self, msg, throwable);
  return self;
}


#line 39
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)throwable {
  GsonMalformedJsonException_initWithJavaLangThrowable_(self, throwable);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[2].selector = @selector(initWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = GsonMalformedJsonException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;", "LJavaLangThrowable;" };
  static const J2ObjcClassInfo _GsonMalformedJsonException = { "MalformedJsonException", "com.google.gson.stream", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_GsonMalformedJsonException;
}

@end


#line 28
void GsonMalformedJsonException_initWithNSString_(GsonMalformedJsonException *self, NSString *msg) {
  JavaIoIOException_initWithNSString_(self, msg);
}


#line 28
GsonMalformedJsonException *new_GsonMalformedJsonException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(GsonMalformedJsonException, initWithNSString_, msg)
}


#line 28
GsonMalformedJsonException *create_GsonMalformedJsonException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(GsonMalformedJsonException, initWithNSString_, msg)
}

void GsonMalformedJsonException_initWithNSString_withJavaLangThrowable_(GsonMalformedJsonException *self, NSString *msg, JavaLangThrowable *throwable) {
  JavaIoIOException_initWithNSString_(self, msg);
  
#line 36
  (void) [self initCauseWithJavaLangThrowable:throwable];
}


#line 32
GsonMalformedJsonException *new_GsonMalformedJsonException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *throwable) {
  J2OBJC_NEW_IMPL(GsonMalformedJsonException, initWithNSString_withJavaLangThrowable_, msg, throwable)
}


#line 32
GsonMalformedJsonException *create_GsonMalformedJsonException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *throwable) {
  J2OBJC_CREATE_IMPL(GsonMalformedJsonException, initWithNSString_withJavaLangThrowable_, msg, throwable)
}


#line 39
void GsonMalformedJsonException_initWithJavaLangThrowable_(GsonMalformedJsonException *self, JavaLangThrowable *throwable) {
  JavaIoIOException_init(self);
  
#line 42
  (void) [self initCauseWithJavaLangThrowable:throwable];
}


#line 39
GsonMalformedJsonException *new_GsonMalformedJsonException_initWithJavaLangThrowable_(JavaLangThrowable *throwable) {
  J2OBJC_NEW_IMPL(GsonMalformedJsonException, initWithJavaLangThrowable_, throwable)
}


#line 39
GsonMalformedJsonException *create_GsonMalformedJsonException_initWithJavaLangThrowable_(JavaLangThrowable *throwable) {
  J2OBJC_CREATE_IMPL(GsonMalformedJsonException, initWithJavaLangThrowable_, throwable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonMalformedJsonException)

J2OBJC_NAME_MAPPING(GsonMalformedJsonException, "com.google.gson.stream", "Gson")
