//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/google/gson/stream/MalformedJsonException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MalformedJsonException")
#ifdef RESTRICT_MalformedJsonException
#define INCLUDE_ALL_MalformedJsonException 0
#else
#define INCLUDE_ALL_MalformedJsonException 1
#endif
#undef RESTRICT_MalformedJsonException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GsonMalformedJsonException_) && (INCLUDE_ALL_MalformedJsonException || defined(INCLUDE_GsonMalformedJsonException))
#define GsonMalformedJsonException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;

/*!
 @brief Thrown when a reader encounters malformed JSON.Some syntax errors can be
  ignored by calling <code>JsonReader.setLenient(boolean)</code>.
 */
@interface GsonMalformedJsonException : JavaIoIOException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)throwable;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)throwable;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonMalformedJsonException)

FOUNDATION_EXPORT void GsonMalformedJsonException_initWithNSString_(GsonMalformedJsonException *self, NSString *msg);

FOUNDATION_EXPORT GsonMalformedJsonException *new_GsonMalformedJsonException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonMalformedJsonException *create_GsonMalformedJsonException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void GsonMalformedJsonException_initWithNSString_withJavaLangThrowable_(GsonMalformedJsonException *self, NSString *msg, JavaLangThrowable *throwable);

FOUNDATION_EXPORT GsonMalformedJsonException *new_GsonMalformedJsonException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonMalformedJsonException *create_GsonMalformedJsonException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *throwable);

FOUNDATION_EXPORT void GsonMalformedJsonException_initWithJavaLangThrowable_(GsonMalformedJsonException *self, JavaLangThrowable *throwable);

FOUNDATION_EXPORT GsonMalformedJsonException *new_GsonMalformedJsonException_initWithJavaLangThrowable_(JavaLangThrowable *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonMalformedJsonException *create_GsonMalformedJsonException_initWithJavaLangThrowable_(JavaLangThrowable *throwable);

J2OBJC_TYPE_LITERAL_HEADER(GsonMalformedJsonException)

@compatibility_alias ComGoogleGsonStreamMalformedJsonException GsonMalformedJsonException;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_MalformedJsonException")
