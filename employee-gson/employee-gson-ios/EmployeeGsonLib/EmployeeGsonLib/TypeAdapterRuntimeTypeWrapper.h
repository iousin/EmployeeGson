//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TypeAdapterRuntimeTypeWrapper")
#ifdef RESTRICT_TypeAdapterRuntimeTypeWrapper
#define INCLUDE_ALL_TypeAdapterRuntimeTypeWrapper 0
#else
#define INCLUDE_ALL_TypeAdapterRuntimeTypeWrapper 1
#endif
#undef RESTRICT_TypeAdapterRuntimeTypeWrapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GsonTypeAdapterRuntimeTypeWrapper_) && (INCLUDE_ALL_TypeAdapterRuntimeTypeWrapper || defined(INCLUDE_GsonTypeAdapterRuntimeTypeWrapper))
#define GsonTypeAdapterRuntimeTypeWrapper_

#define RESTRICT_TypeAdapter 1
#define INCLUDE_GsonTypeAdapter 1
#include "TypeAdapter.h"

@class GsonGson;
@class GsonJsonReader;
@class GsonJsonWriter;
@protocol JavaLangReflectType;

@interface GsonTypeAdapterRuntimeTypeWrapper : GsonTypeAdapter

#pragma mark Public

- (id)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(id)value;

#pragma mark Package-Private

- (instancetype __nonnull)initWithGsonGson:(GsonGson *)context
                       withGsonTypeAdapter:(GsonTypeAdapter *)delegate
                   withJavaLangReflectType:(id<JavaLangReflectType>)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonTypeAdapterRuntimeTypeWrapper)

FOUNDATION_EXPORT void GsonTypeAdapterRuntimeTypeWrapper_initWithGsonGson_withGsonTypeAdapter_withJavaLangReflectType_(GsonTypeAdapterRuntimeTypeWrapper *self, GsonGson *context, GsonTypeAdapter *delegate, id<JavaLangReflectType> type);

FOUNDATION_EXPORT GsonTypeAdapterRuntimeTypeWrapper *new_GsonTypeAdapterRuntimeTypeWrapper_initWithGsonGson_withGsonTypeAdapter_withJavaLangReflectType_(GsonGson *context, GsonTypeAdapter *delegate, id<JavaLangReflectType> type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonTypeAdapterRuntimeTypeWrapper *create_GsonTypeAdapterRuntimeTypeWrapper_initWithGsonGson_withGsonTypeAdapter_withJavaLangReflectType_(GsonGson *context, GsonTypeAdapter *delegate, id<JavaLangReflectType> type);

J2OBJC_TYPE_LITERAL_HEADER(GsonTypeAdapterRuntimeTypeWrapper)

@compatibility_alias ComGoogleGsonInternalBindTypeAdapterRuntimeTypeWrapper GsonTypeAdapterRuntimeTypeWrapper;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_TypeAdapterRuntimeTypeWrapper")
